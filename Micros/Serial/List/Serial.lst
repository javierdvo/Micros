
AVRASM ver. 2.1.30  C:\Users\Javier\SkyDrive\Documents\Micros\Serial\List\Serial.asm Tue Nov 11 12:53:36 2014

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : Off
                 ;Automatic register allocation : Off
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00a4 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00003d 6153
00003e 6162
00003f 6f64
000040 0000      	.DB  0x53,0x61,0x62,0x61,0x64,0x6F,0x0,0x0
000041 0000
000042 6f44
000043 696d
000044 676e      	.DB  0x0,0x0,0x44,0x6F,0x6D,0x69,0x6E,0x67
000045 006f
000046 0000
000047 754c
000048 656e      	.DB  0x6F,0x0,0x0,0x0,0x4C,0x75,0x6E,0x65
000049 0073
00004a 0000
00004b 0000
00004c 614d      	.DB  0x73,0x0,0x0,0x0,0x0,0x0,0x4D,0x61
00004d 7472
00004e 7365
00004f 0000
000050 0000      	.DB  0x72,0x74,0x65,0x73,0x0,0x0,0x0,0x0
000051 694d
000052 7265
000053 6f63
000054 656c      	.DB  0x4D,0x69,0x65,0x72,0x63,0x6F,0x6C,0x65
000055 0073
000056 754a
000057 7665
000058 7365      	.DB  0x73,0x0,0x4A,0x75,0x65,0x76,0x65,0x73
000059 0000
00005a 0000
00005b 6956
00005c 7265      	.DB  0x0,0x0,0x0,0x0,0x56,0x69,0x65,0x72
00005d 656e
C:\Users\Javier\SkyDrive\Documents\Micros\Serial\List\Serial.asm(1112): warning: .cseg .db misalignment - padding zero byte
00005e 0073      	.DB  0x6E,0x65,0x73
                 _0x0:
00005f 6144
000060 656d
000061 6c20
000062 2061      	.DB  0x44,0x61,0x6D,0x65,0x20,0x6C,0x61,0x20
000063 6566
000064 6863
000065 2061
000066 6e65      	.DB  0x66,0x65,0x63,0x68,0x61,0x20,0x65,0x6E
000067 6620
000068 726f
000069 616d
00006a 6f74      	.DB  0x20,0x66,0x6F,0x72,0x6D,0x61,0x74,0x6F
00006b 6420
00006c 2d64
00006d 6d6d
00006e 792d      	.DB  0x20,0x64,0x64,0x2D,0x6D,0x6D,0x2D,0x79
00006f 7979
000070 2079
000071 3e2d
000072 0020      	.DB  0x79,0x79,0x79,0x20,0x2D,0x3E,0x20,0x0
000073 7325
000074 2500
000075 2569
000076 2563      	.DB  0x25,0x73,0x0,0x25,0x69,0x25,0x63,0x25
000077 2569
000078 2563
000079 0069
00007a 6c45      	.DB  0x69,0x25,0x63,0x25,0x69,0x0,0x45,0x6C
00007b 6420
00007c 6169
00007d 6420
00007e 2065      	.DB  0x20,0x64,0x69,0x61,0x20,0x64,0x65,0x20
00007f 616c
000080 7320
000081 6d65
000082 6e61      	.DB  0x6C,0x61,0x20,0x73,0x65,0x6D,0x61,0x6E
000083 2061
000084 7365
000085 2520
000086 0a73      	.DB  0x61,0x20,0x65,0x73,0x20,0x25,0x73,0xA
000087 000d
000088 6156
000089 6f6c
00008a 6572      	.DB  0xD,0x0,0x56,0x61,0x6C,0x6F,0x72,0x65
00008b 2073
00008c 7566
00008d 7265
00008e 2061      	.DB  0x73,0x20,0x66,0x75,0x65,0x72,0x61,0x20
00008f 6564
000090 206c
000091 6172
000092 676e      	.DB  0x64,0x65,0x6C,0x20,0x72,0x61,0x6E,0x67
000093 206f
000094 0d0a
000095 4600
000096 726f      	.DB  0x6F,0x20,0xA,0xD,0x0,0x46,0x6F,0x72
000097 616d
000098 6f74
000099 6920
00009a 766e      	.DB  0x6D,0x61,0x74,0x6F,0x20,0x69,0x6E,0x76
00009b 6c61
00009c 6469
00009d 206f
00009e 0d0a      	.DB  0x61,0x6C,0x69,0x64,0x6F,0x20,0xA,0xD
C:\Users\Javier\SkyDrive\Documents\Micros\Serial\List\Serial.asm(1130): warning: .cseg .db misalignment - padding zero byte
00009f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000a0 0043      	.DW  0x43
0000a1 031e      	.DW  _dias
0000a2 007a      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
0000a3 0000      	.DW  0
                 
                 __RESET:
0000a4 94f8      	CLI
0000a5 27ee      	CLR  R30
0000a6 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000a7 e0f1      	LDI  R31,1
0000a8 bff5      	OUT  MCUCR,R31
0000a9 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
0000aa e1f8      	LDI  R31,0x18
0000ab 95a8      	WDR
0000ac b7a4      	IN   R26,MCUSR
0000ad 7fa7      	CBR  R26,8
0000ae bfa4      	OUT  MCUSR,R26
0000af 93f0 0060 	STS  WDTCSR,R31
0000b1 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0000b3 e08d      	LDI  R24,(14-2)+1
0000b4 e0a2      	LDI  R26,2
0000b5 27bb      	CLR  R27
                 __CLEAR_REG:
0000b6 93ed      	ST   X+,R30
0000b7 958a      	DEC  R24
0000b8 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000b9 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000ba e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000bb e0a0      	LDI  R26,LOW(__SRAM_START)
0000bc e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000bd 93ed      	ST   X+,R30
0000be 9701      	SBIW R24,1
0000bf f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000c0 e4e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000c1 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000c2 9185      	LPM  R24,Z+
0000c3 9195      	LPM  R25,Z+
0000c4 9700      	SBIW R24,0
0000c5 f061      	BREQ __GLOBAL_INI_END
0000c6 91a5      	LPM  R26,Z+
0000c7 91b5      	LPM  R27,Z+
0000c8 9005      	LPM  R0,Z+
0000c9 9015      	LPM  R1,Z+
0000ca 01bf      	MOVW R22,R30
0000cb 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000cc 9005      	LPM  R0,Z+
0000cd 920d      	ST   X+,R0
0000ce 9701      	SBIW R24,1
0000cf f7e1      	BRNE __GLOBAL_INI_LOOP
0000d0 01fb      	MOVW R30,R22
0000d1 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000d2 e0e0      	LDI  R30,__GPIOR0_INIT
0000d3 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000d4 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000d5 bfed      	OUT  SPL,R30
0000d6 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000d7 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000d8 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000d9 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000da 940c 00dc 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;#include <stdio.h>
                 ;#include <mega328p.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;
                 ;unsigned char sep1,sep2;
                 ;char Cadena[20];
                 ;int dia,mes,diasemana,year;
                 ;char dias[7][10]={"Sabado","Domingo","Lunes","Martes","Miercoles","Jueves","Viernes"};
                 
                 	.DSEG
                 ;
                 ;void main(void){
                 ; 0000 0009 void main(void){
                 
                 	.CSEG
                 _main:
                 ; 0000 000A UCSR0A=0x02;
0000dc e0e2      	LDI  R30,LOW(2)
0000dd 93e0 00c0 	STS  192,R30
                 ; 0000 000B UCSR0B=0x18;
0000df e1e8      	LDI  R30,LOW(24)
0000e0 93e0 00c1 	STS  193,R30
                 ; 0000 000C UCSR0C=0x06;
0000e2 e0e6      	LDI  R30,LOW(6)
0000e3 93e0 00c2 	STS  194,R30
                 ; 0000 000D UBRR0H=0x00;
0000e5 e0e0      	LDI  R30,LOW(0)
0000e6 93e0 00c5 	STS  197,R30
                 ; 0000 000E UBRR0L=0x0C;
0000e8 e0ec      	LDI  R30,LOW(12)
0000e9 93e0 00c4 	STS  196,R30
                 ; 0000 000F while(1)
                 _0x4:
                 ; 0000 0010 {
                 ; 0000 0011     printf("Dame la fecha en formato dd-mm-yyyy -> ");
                +
0000eb ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000ec e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000ed 940e 04fa 	CALL SUBOPT_0x0
                 ; 0000 0012     scanf("%s",Cadena);
                +
0000ef eee6     +LDI R30 , LOW ( 2 * _0x0 + ( 40 ) )
0000f0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 40 ) )
                 	__POINTW1FN _0x0,40
0000f1 93fa      	ST   -Y,R31
0000f2 93ea      	ST   -Y,R30
0000f3 e0e2      	LDI  R30,LOW(_Cadena)
0000f4 e0f3      	LDI  R31,HIGH(_Cadena)
0000f5 940e 0501 	CALL SUBOPT_0x1
0000f7 e084      	LDI  R24,4
0000f8 940e 04a4 	CALL _scanf
0000fa 9626      	ADIW R28,6
                 ; 0000 0013     sscanf( Cadena, "%i%c%i%c%i",&dia,&sep1,&mes,&sep2,&year);
0000fb e0e2      	LDI  R30,LOW(_Cadena)
0000fc e0f3      	LDI  R31,HIGH(_Cadena)
0000fd 93fa      	ST   -Y,R31
0000fe 93ea      	ST   -Y,R30
                +
0000ff eee9     +LDI R30 , LOW ( 2 * _0x0 + ( 43 ) )
000100 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 43 ) )
                 	__POINTW1FN _0x0,43
000101 93fa      	ST   -Y,R31
000102 93ea      	ST   -Y,R30
000103 e1e6      	LDI  R30,LOW(_dia)
000104 e0f3      	LDI  R31,HIGH(_dia)
000105 940e 0501 	CALL SUBOPT_0x1
000107 e0e0      	LDI  R30,LOW(_sep1)
000108 e0f3      	LDI  R31,HIGH(_sep1)
000109 940e 0501 	CALL SUBOPT_0x1
00010b e1e8      	LDI  R30,LOW(_mes)
00010c e0f3      	LDI  R31,HIGH(_mes)
00010d 940e 0501 	CALL SUBOPT_0x1
00010f e0e1      	LDI  R30,LOW(_sep2)
000110 e0f3      	LDI  R31,HIGH(_sep2)
000111 940e 0501 	CALL SUBOPT_0x1
000113 e1ec      	LDI  R30,LOW(_year)
000114 e0f3      	LDI  R31,HIGH(_year)
000115 940e 0501 	CALL SUBOPT_0x1
000117 e184      	LDI  R24,20
000118 940e 0482 	CALL _sscanf
00011a 9668      	ADIW R28,24
                 ; 0000 0014     if((sep1=='-')&&(sep2=='-'))
00011b 91a0 0300 	LDS  R26,_sep1
00011d 32ad      	CPI  R26,LOW(0x2D)
00011e f421      	BRNE _0x8
00011f 91a0 0301 	LDS  R26,_sep2
000121 32ad      	CPI  R26,LOW(0x2D)
000122 f009      	BREQ _0x9
                 _0x8:
000123 c07d      	RJMP _0x7
                 _0x9:
                 ; 0000 0015     {
                 ; 0000 0016         if((dia>=1)&&(dia<=31)&&(mes>=1)&&(mes<=12)&&(year>=1)){
000124 940e 0506 	CALL SUBOPT_0x2
000126 9711      	SBIW R26,1
000127 f084      	BRLT _0xB
000128 940e 0506 	CALL SUBOPT_0x2
00012a 9790      	SBIW R26,32
00012b f464      	BRGE _0xB
00012c 940e 050b 	CALL SUBOPT_0x3
00012e 9711      	SBIW R26,1
00012f f044      	BRLT _0xB
000130 940e 050b 	CALL SUBOPT_0x3
000132 971d      	SBIW R26,13
000133 f424      	BRGE _0xB
000134 940e 0510 	CALL SUBOPT_0x4
000136 9711      	SBIW R26,1
000137 f40c      	BRGE _0xC
                 _0xB:
000138 c063      	RJMP _0xA
                 _0xC:
                 ; 0000 0017             if (mes<=2)
000139 940e 050b 	CALL SUBOPT_0x3
00013b 9713      	SBIW R26,3
00013c f484      	BRGE _0xD
                 ; 0000 0018             {
                 ; 0000 0019                 mes=mes+12;
00013d 91e0 0318 	LDS  R30,_mes
00013f 91f0 0319 	LDS  R31,_mes+1
000141 963c      	ADIW R30,12
000142 93e0 0318 	STS  _mes,R30
000144 93f0 0319 	STS  _mes+1,R31
                 ; 0000 001A                 year--;
000146 e1ac      	LDI  R26,LOW(_year)
000147 e0b3      	LDI  R27,HIGH(_year)
000148 91ed      	LD   R30,X+
000149 91fd      	LD   R31,X+
00014a 9731      	SBIW R30,1
00014b 93fe      	ST   -X,R31
00014c 93ee      	ST   -X,R30
                 ; 0000 001B             }
                 ; 0000 001C             else{
                 _0xD:
                 ; 0000 001D             }
                 ; 0000 001E             diasemana=(dia+((mes+1)*26/10)+year+(year/4)+((year/100)*6)+(year/400))%7;
00014d 91e0 0318 	LDS  R30,_mes
00014f 91f0 0319 	LDS  R31,_mes+1
000151 9631      	ADIW R30,1
000152 e1aa      	LDI  R26,LOW(26)
000153 e0b0      	LDI  R27,HIGH(26)
000154 940e 057e 	CALL __MULW12
000156 01df      	MOVW R26,R30
000157 e0ea      	LDI  R30,LOW(10)
000158 e0f0      	LDI  R31,HIGH(10)
000159 940e 0596 	CALL __DIVW21
00015b 940e 0506 	CALL SUBOPT_0x2
00015d 0fea      	ADD  R30,R26
00015e 1ffb      	ADC  R31,R27
00015f 940e 0510 	CALL SUBOPT_0x4
000161 0fea      	ADD  R30,R26
000162 1ffb      	ADC  R31,R27
000163 01bf      	MOVW R22,R30
000164 940e 0510 	CALL SUBOPT_0x4
000166 e0e4      	LDI  R30,LOW(4)
000167 e0f0      	LDI  R31,HIGH(4)
000168 940e 0596 	CALL __DIVW21
                +
00016a 0f6e     +ADD R22 , R30
00016b 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
00016c 940e 0510 	CALL SUBOPT_0x4
00016e e6e4      	LDI  R30,LOW(100)
00016f e0f0      	LDI  R31,HIGH(100)
000170 940e 0596 	CALL __DIVW21
000172 e0a6      	LDI  R26,LOW(6)
000173 e0b0      	LDI  R27,HIGH(6)
000174 940e 057e 	CALL __MULW12
                +
000176 0f6e     +ADD R22 , R30
000177 1f7f     +ADC R23 , R31
                 	__ADDWRR 22,23,30,31
000178 940e 0510 	CALL SUBOPT_0x4
00017a e9e0      	LDI  R30,LOW(400)
00017b e0f1      	LDI  R31,HIGH(400)
00017c 940e 0596 	CALL __DIVW21
00017e 01db      	MOVW R26,R22
00017f 0fae      	ADD  R26,R30
000180 1fbf      	ADC  R27,R31
000181 e0e7      	LDI  R30,LOW(7)
000182 e0f0      	LDI  R31,HIGH(7)
000183 940e 059b 	CALL __MODW21
000185 93e0 031a 	STS  _diasemana,R30
000187 93f0 031b 	STS  _diasemana+1,R31
                 ; 0000 001F             printf("El dia de la semana es %s\n\r",dias[diasemana]);
                +
000189 efe4     +LDI R30 , LOW ( 2 * _0x0 + ( 54 ) )
00018a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 54 ) )
                 	__POINTW1FN _0x0,54
00018b 93fa      	ST   -Y,R31
00018c 93ea      	ST   -Y,R30
00018d 91a0 031a 	LDS  R26,_diasemana
00018f 91b0 031b 	LDS  R27,_diasemana+1
000191 e0ea      	LDI  R30,LOW(10)
000192 940e 0578 	CALL __MULB1W2U
000194 5ee2      	SUBI R30,LOW(-_dias)
000195 4ffc      	SBCI R31,HIGH(-_dias)
000196 940e 0501 	CALL SUBOPT_0x1
000198 e084      	LDI  R24,4
000199 d15e      	RCALL _printf
00019a 9626      	ADIW R28,6
                 ; 0000 0020         }
                 ; 0000 0021         else
00019b c004      	RJMP _0xF
                 _0xA:
                 ; 0000 0022         printf("Valores fuera del rango \n\r");
                +
00019c e1e0     +LDI R30 , LOW ( 2 * _0x0 + ( 82 ) )
00019d e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 82 ) )
                 	__POINTW1FN _0x0,82
00019e 940e 04fa 	CALL SUBOPT_0x0
                 ; 0000 0023     }
                 _0xF:
                 ; 0000 0024     else
0001a0 c004      	RJMP _0x10
                 _0x7:
                 ; 0000 0025         printf("Formato invalido \n\r");
                +
0001a1 e2eb     +LDI R30 , LOW ( 2 * _0x0 + ( 109 ) )
0001a2 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 109 ) )
                 	__POINTW1FN _0x0,109
0001a3 940e 04fa 	CALL SUBOPT_0x0
                 ; 0000 0026 }
                 _0x10:
0001a5 cf45      	RJMP _0x4
                 ; 0000 0027 }
                 _0x11:
0001a6 cfff      	RJMP _0x11
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 _0x2000003:
0001a7 91e0 00c0 	LDS  R30,192
0001a9 78e0      	ANDI R30,LOW(0x80)
0001aa f3e1      	BREQ _0x2000003
0001ab 91e0 00c6 	LDS  R30,198
0001ad 9508      	RET
                 _putchar:
                 _0x2000006:
0001ae 91e0 00c0 	LDS  R30,192
0001b0 72e0      	ANDI R30,LOW(0x20)
0001b1 f3e1      	BREQ _0x2000006
0001b2 81e8      	LD   R30,Y
0001b3 93e0 00c6 	STS  198,R30
0001b5 9621      	ADIW R28,1
0001b6 9508      	RET
                 _put_usart_G100:
0001b7 81ea      	LDD  R30,Y+2
0001b8 93ea      	ST   -Y,R30
0001b9 dff4      	RCALL _putchar
0001ba 81a8      	LD   R26,Y
0001bb 81b9      	LDD  R27,Y+1
0001bc 91ed      	LD   R30,X+
0001bd 91fd      	LD   R31,X+
0001be 9631      	ADIW R30,1
0001bf 93fe      	ST   -X,R31
0001c0 93ee      	ST   -X,R30
0001c1 9623      	ADIW R28,3
0001c2 9508      	RET
                 __print_G100:
0001c3 9726      	SBIW R28,6
0001c4 940e 05c4 	CALL __SAVELOCR6
0001c6 e000      	LDI  R16,0
0001c7 85ac      	LDD  R26,Y+12
0001c8 85bd      	LDD  R27,Y+12+1
0001c9 e0e0      	LDI  R30,LOW(0)
0001ca e0f0      	LDI  R31,HIGH(0)
0001cb 93ed      	ST   X+,R30
0001cc 93fc      	ST   X,R31
                 _0x200001C:
0001cd 89ea      	LDD  R30,Y+18
0001ce 89fb      	LDD  R31,Y+18+1
0001cf 9631      	ADIW R30,1
0001d0 8bea      	STD  Y+18,R30
0001d1 8bfb      	STD  Y+18+1,R31
0001d2 9731      	SBIW R30,1
0001d3 91e4      	LPM  R30,Z
0001d4 2f3e      	MOV  R19,R30
0001d5 30e0      	CPI  R30,0
0001d6 f411      	BRNE PC+3
0001d7 940c 02f0 	JMP _0x200001E
0001d9 2fe0      	MOV  R30,R16
0001da 30e0      	CPI  R30,0
0001db f439      	BRNE _0x2000022
0001dc 3235      	CPI  R19,37
0001dd f411      	BRNE _0x2000023
0001de e001      	LDI  R16,LOW(1)
0001df c002      	RJMP _0x2000024
                 _0x2000023:
0001e0 940e 0515 	CALL SUBOPT_0x5
                 _0x2000024:
0001e2 c10c      	RJMP _0x2000021
                 _0x2000022:
0001e3 30e1      	CPI  R30,LOW(0x1)
0001e4 f4a9      	BRNE _0x2000025
0001e5 3235      	CPI  R19,37
0001e6 f419      	BRNE _0x2000026
0001e7 940e 0515 	CALL SUBOPT_0x5
0001e9 c104      	RJMP _0x20000CF
                 _0x2000026:
0001ea e002      	LDI  R16,LOW(2)
0001eb e050      	LDI  R21,LOW(0)
0001ec e010      	LDI  R17,LOW(0)
0001ed 323d      	CPI  R19,45
0001ee f411      	BRNE _0x2000027
0001ef e011      	LDI  R17,LOW(1)
0001f0 c0fe      	RJMP _0x2000021
                 _0x2000027:
0001f1 323b      	CPI  R19,43
0001f2 f411      	BRNE _0x2000028
0001f3 e25b      	LDI  R21,LOW(43)
0001f4 c0fa      	RJMP _0x2000021
                 _0x2000028:
0001f5 3230      	CPI  R19,32
0001f6 f411      	BRNE _0x2000029
0001f7 e250      	LDI  R21,LOW(32)
0001f8 c0f6      	RJMP _0x2000021
                 _0x2000029:
0001f9 c002      	RJMP _0x200002A
                 _0x2000025:
0001fa 30e2      	CPI  R30,LOW(0x2)
0001fb f439      	BRNE _0x200002B
                 _0x200002A:
0001fc e040      	LDI  R20,LOW(0)
0001fd e003      	LDI  R16,LOW(3)
0001fe 3330      	CPI  R19,48
0001ff f411      	BRNE _0x200002C
000200 6810      	ORI  R17,LOW(128)
000201 c0ed      	RJMP _0x2000021
                 _0x200002C:
000202 c004      	RJMP _0x200002D
                 _0x200002B:
000203 30e3      	CPI  R30,LOW(0x3)
000204 f011      	BREQ PC+3
000205 940c 02ef 	JMP _0x2000021
                 _0x200002D:
000207 3330      	CPI  R19,48
000208 f010      	BRLO _0x2000030
000209 333a      	CPI  R19,58
00020a f008      	BRLO _0x2000031
                 _0x2000030:
00020b c007      	RJMP _0x200002F
                 _0x2000031:
00020c e0aa      	LDI  R26,LOW(10)
00020d 9f4a      	MUL  R20,R26
00020e 2d40      	MOV  R20,R0
00020f 2fe3      	MOV  R30,R19
000210 53e0      	SUBI R30,LOW(48)
000211 0f4e      	ADD  R20,R30
000212 c0dc      	RJMP _0x2000021
                 _0x200002F:
000213 2fe3      	MOV  R30,R19
000214 36e3      	CPI  R30,LOW(0x63)
000215 f449      	BRNE _0x2000035
000216 940e 051e 	CALL SUBOPT_0x6
000218 89e8      	LDD  R30,Y+16
000219 89f9      	LDD  R31,Y+16+1
00021a 81a4      	LDD  R26,Z+4
00021b 93aa      	ST   -Y,R26
00021c 940e 0524 	CALL SUBOPT_0x7
00021e c0cf      	RJMP _0x2000036
                 _0x2000035:
00021f 37e3      	CPI  R30,LOW(0x73)
000220 f441      	BRNE _0x2000038
000221 940e 051e 	CALL SUBOPT_0x6
000223 940e 052c 	CALL SUBOPT_0x8
000225 940e 04e5 	CALL _strlen
000227 2f0e      	MOV  R16,R30
000228 c00a      	RJMP _0x2000039
                 _0x2000038:
000229 37e0      	CPI  R30,LOW(0x70)
00022a f461      	BRNE _0x200003B
00022b 940e 051e 	CALL SUBOPT_0x6
00022d 940e 052c 	CALL SUBOPT_0x8
00022f 940e 04ef 	CALL _strlenf
000231 2f0e      	MOV  R16,R30
000232 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000233 6012      	ORI  R17,LOW(2)
000234 771f      	ANDI R17,LOW(127)
000235 e020      	LDI  R18,LOW(0)
000236 c035      	RJMP _0x200003C
                 _0x200003B:
000237 36e4      	CPI  R30,LOW(0x64)
000238 f011      	BREQ _0x200003F
000239 36e9      	CPI  R30,LOW(0x69)
00023a f411      	BRNE _0x2000040
                 _0x200003F:
00023b 6014      	ORI  R17,LOW(4)
00023c c002      	RJMP _0x2000041
                 _0x2000040:
00023d 37e5      	CPI  R30,LOW(0x75)
00023e f431      	BRNE _0x2000042
                 _0x2000041:
00023f e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000240 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000241 83ee      	STD  Y+6,R30
000242 83ff      	STD  Y+6+1,R31
000243 e005      	LDI  R16,LOW(5)
000244 c00d      	RJMP _0x2000043
                 _0x2000042:
000245 35e8      	CPI  R30,LOW(0x58)
000246 f411      	BRNE _0x2000045
000247 6018      	ORI  R17,LOW(8)
000248 c004      	RJMP _0x2000046
                 _0x2000045:
000249 37e8      	CPI  R30,LOW(0x78)
00024a f011      	BREQ PC+3
00024b 940c 02ee 	JMP _0x2000077
                 _0x2000046:
00024d e7e2      	LDI  R30,LOW(_tbl16_G100*2)
00024e e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00024f 83ee      	STD  Y+6,R30
000250 83ff      	STD  Y+6+1,R31
000251 e004      	LDI  R16,LOW(4)
                 _0x2000043:
000252 ff12      	SBRS R17,2
000253 c014      	RJMP _0x2000048
000254 940e 051e 	CALL SUBOPT_0x6
000256 940e 0536 	CALL SUBOPT_0x9
000258 85ab      	LDD  R26,Y+11
000259 23aa      	TST  R26
00025a f43a      	BRPL _0x2000049
00025b 85ea      	LDD  R30,Y+10
00025c 85fb      	LDD  R31,Y+10+1
00025d 940e 056c 	CALL __ANEGW1
00025f 87ea      	STD  Y+10,R30
000260 87fb      	STD  Y+10+1,R31
000261 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
000262 3050      	CPI  R21,0
000263 f011      	BREQ _0x200004A
000264 5f0f      	SUBI R16,-LOW(1)
000265 c001      	RJMP _0x200004B
                 _0x200004A:
000266 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
000267 c004      	RJMP _0x200004C
                 _0x2000048:
000268 940e 051e 	CALL SUBOPT_0x6
00026a 940e 0536 	CALL SUBOPT_0x9
                 _0x200004C:
                 _0x200003C:
00026c fd10      	SBRC R17,0
00026d c011      	RJMP _0x200004D
                 _0x200004E:
00026e 1704      	CP   R16,R20
00026f f478      	BRSH _0x2000050
000270 ff17      	SBRS R17,7
000271 c008      	RJMP _0x2000051
000272 ff12      	SBRS R17,2
000273 c004      	RJMP _0x2000052
000274 7f1b      	ANDI R17,LOW(251)
000275 2f35      	MOV  R19,R21
000276 5001      	SUBI R16,LOW(1)
000277 c001      	RJMP _0x2000053
                 _0x2000052:
000278 e330      	LDI  R19,LOW(48)
                 _0x2000053:
000279 c001      	RJMP _0x2000054
                 _0x2000051:
00027a e230      	LDI  R19,LOW(32)
                 _0x2000054:
00027b 940e 0515 	CALL SUBOPT_0x5
00027d 5041      	SUBI R20,LOW(1)
00027e cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
00027f 2f20      	MOV  R18,R16
000280 ff11      	SBRS R17,1
000281 c017      	RJMP _0x2000055
                 _0x2000056:
000282 3020      	CPI  R18,0
000283 f0a1      	BREQ _0x2000058
000284 ff13      	SBRS R17,3
000285 c006      	RJMP _0x2000059
000286 81ee      	LDD  R30,Y+6
000287 81ff      	LDD  R31,Y+6+1
000288 9135      	LPM  R19,Z+
000289 83ee      	STD  Y+6,R30
00028a 83ff      	STD  Y+6+1,R31
00028b c005      	RJMP _0x200005A
                 _0x2000059:
00028c 81ae      	LDD  R26,Y+6
00028d 81bf      	LDD  R27,Y+6+1
00028e 913d      	LD   R19,X+
00028f 83ae      	STD  Y+6,R26
000290 83bf      	STD  Y+6+1,R27
                 _0x200005A:
000291 940e 0515 	CALL SUBOPT_0x5
000293 3040      	CPI  R20,0
000294 f009      	BREQ _0x200005B
000295 5041      	SUBI R20,LOW(1)
                 _0x200005B:
000296 5021      	SUBI R18,LOW(1)
000297 cfea      	RJMP _0x2000056
                 _0x2000058:
000298 c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
000299 e330      	LDI  R19,LOW(48)
00029a 81ee      	LDD  R30,Y+6
00029b 81ff      	LDD  R31,Y+6+1
00029c 940e 05bb 	CALL __GETW1PF
00029e 87e8      	STD  Y+8,R30
00029f 87f9      	STD  Y+8+1,R31
0002a0 81ee      	LDD  R30,Y+6
0002a1 81ff      	LDD  R31,Y+6+1
0002a2 9632      	ADIW R30,2
0002a3 83ee      	STD  Y+6,R30
0002a4 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0002a5 85e8      	LDD  R30,Y+8
0002a6 85f9      	LDD  R31,Y+8+1
0002a7 85aa      	LDD  R26,Y+10
0002a8 85bb      	LDD  R27,Y+10+1
0002a9 17ae      	CP   R26,R30
0002aa 07bf      	CPC  R27,R31
0002ab f050      	BRLO _0x2000062
0002ac 5f3f      	SUBI R19,-LOW(1)
0002ad 85a8      	LDD  R26,Y+8
0002ae 85b9      	LDD  R27,Y+8+1
0002af 85ea      	LDD  R30,Y+10
0002b0 85fb      	LDD  R31,Y+10+1
0002b1 1bea      	SUB  R30,R26
0002b2 0bfb      	SBC  R31,R27
0002b3 87ea      	STD  Y+10,R30
0002b4 87fb      	STD  Y+10+1,R31
0002b5 cfef      	RJMP _0x2000060
                 _0x2000062:
0002b6 333a      	CPI  R19,58
0002b7 f028      	BRLO _0x2000063
0002b8 ff13      	SBRS R17,3
0002b9 c002      	RJMP _0x2000064
0002ba 5f39      	SUBI R19,-LOW(7)
0002bb c001      	RJMP _0x2000065
                 _0x2000064:
0002bc 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0002bd fd14      	SBRC R17,4
0002be c01a      	RJMP _0x2000067
0002bf 3331      	CPI  R19,49
0002c0 f420      	BRSH _0x2000069
0002c1 85a8      	LDD  R26,Y+8
0002c2 85b9      	LDD  R27,Y+8+1
0002c3 9711      	SBIW R26,1
0002c4 f409      	BRNE _0x2000068
                 _0x2000069:
0002c5 c009      	RJMP _0x20000D0
                 _0x2000068:
0002c6 1742      	CP   R20,R18
0002c7 f010      	BRLO _0x200006D
0002c8 ff10      	SBRS R17,0
0002c9 c001      	RJMP _0x200006E
                 _0x200006D:
0002ca c013      	RJMP _0x200006C
                 _0x200006E:
0002cb e230      	LDI  R19,LOW(32)
0002cc ff17      	SBRS R17,7
0002cd c00b      	RJMP _0x200006F
0002ce e330      	LDI  R19,LOW(48)
                 _0x20000D0:
0002cf 6110      	ORI  R17,LOW(16)
0002d0 ff12      	SBRS R17,2
0002d1 c007      	RJMP _0x2000070
0002d2 7f1b      	ANDI R17,LOW(251)
0002d3 935a      	ST   -Y,R21
0002d4 940e 0524 	CALL SUBOPT_0x7
0002d6 3040      	CPI  R20,0
0002d7 f009      	BREQ _0x2000071
0002d8 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0002d9 940e 0515 	CALL SUBOPT_0x5
0002db 3040      	CPI  R20,0
0002dc f009      	BREQ _0x2000072
0002dd 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
0002de 5021      	SUBI R18,LOW(1)
0002df 85a8      	LDD  R26,Y+8
0002e0 85b9      	LDD  R27,Y+8+1
0002e1 9712      	SBIW R26,2
0002e2 f008      	BRLO _0x200005F
0002e3 cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0002e4 ff10      	SBRS R17,0
0002e5 c008      	RJMP _0x2000073
                 _0x2000074:
0002e6 3040      	CPI  R20,0
0002e7 f031      	BREQ _0x2000076
0002e8 5041      	SUBI R20,LOW(1)
0002e9 e2e0      	LDI  R30,LOW(32)
0002ea 93ea      	ST   -Y,R30
0002eb 940e 0524 	CALL SUBOPT_0x7
0002ed cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000CF:
0002ee e000      	LDI  R16,LOW(0)
                 _0x2000021:
0002ef cedd      	RJMP _0x200001C
                 _0x200001E:
0002f0 85ac      	LDD  R26,Y+12
0002f1 85bd      	LDD  R27,Y+12+1
0002f2 940e 05b7 	CALL __GETW1P
0002f4 940e 05cb 	CALL __LOADLOCR6
0002f6 9664      	ADIW R28,20
0002f7 9508      	RET
                 _printf:
0002f8 92ff      	PUSH R15
0002f9 2ef8      	MOV  R15,R24
0002fa 9726      	SBIW R28,6
0002fb 931a      	ST   -Y,R17
0002fc 930a      	ST   -Y,R16
0002fd 01de      	MOVW R26,R28
0002fe 9614      	ADIW R26,4
0002ff 940e 0568 	CALL __ADDW2R15
000301 018d      	MOVW R16,R26
000302 e0e0      	LDI  R30,LOW(0)
000303 83ec      	STD  Y+4,R30
000304 83ed      	STD  Y+4+1,R30
000305 83ee      	STD  Y+6,R30
000306 83ef      	STD  Y+6+1,R30
000307 01de      	MOVW R26,R28
000308 9618      	ADIW R26,8
000309 940e 053e 	CALL SUBOPT_0xA
00030b 940e 0543 	CALL SUBOPT_0xB
00030d ebe7      	LDI  R30,LOW(_put_usart_G100)
00030e e0f1      	LDI  R31,HIGH(_put_usart_G100)
00030f 93fa      	ST   -Y,R31
000310 93ea      	ST   -Y,R30
000311 01fe      	MOVW R30,R28
000312 9638      	ADIW R30,8
000313 93fa      	ST   -Y,R31
000314 93ea      	ST   -Y,R30
000315 dead      	RCALL __print_G100
000316 8119      	LDD  R17,Y+1
000317 8108      	LDD  R16,Y+0
000318 9628      	ADIW R28,8
000319 90ff      	POP  R15
00031a 9508      	RET
                 _get_usart_G100:
00031b 940e 0548 	CALL SUBOPT_0xC
00031d f029      	BREQ _0x200007E
00031e 81ab      	LDD  R26,Y+3
00031f 81bc      	LDD  R27,Y+3+1
000320 e0e0      	LDI  R30,LOW(0)
000321 93ec      	ST   X,R30
000322 c002      	RJMP _0x200007F
                 _0x200007E:
000323 de83      	RCALL _getchar
000324 2f0e      	MOV  R16,R30
                 _0x200007F:
000325 c021      	RJMP _0x2060005
                 _get_buff_G100:
000326 940e 0548 	CALL SUBOPT_0xC
000328 f029      	BREQ _0x2000080
000329 81ab      	LDD  R26,Y+3
00032a 81bc      	LDD  R27,Y+3+1
00032b e0e0      	LDI  R30,LOW(0)
00032c 93ec      	ST   X,R30
00032d c019      	RJMP _0x2000081
                 _0x2000080:
00032e 81a9      	LDD  R26,Y+1
00032f 81ba      	LDD  R27,Y+1+1
000330 9611      	ADIW R26,1
000331 940e 05b7 	CALL __GETW1P
000333 9730      	SBIW R30,0
000334 f089      	BREQ _0x2000082
000335 81e9      	LDD  R30,Y+1
000336 81fa      	LDD  R31,Y+1+1
000337 81a1      	LDD  R26,Z+1
000338 81b2      	LDD  R27,Z+2
000339 91ec      	LD   R30,X
00033a 2f0e      	MOV  R16,R30
00033b 30e0      	CPI  R30,0
00033c f041      	BREQ _0x2000083
00033d 81a9      	LDD  R26,Y+1
00033e 81ba      	LDD  R27,Y+1+1
00033f 9611      	ADIW R26,1
000340 91ed      	LD   R30,X+
000341 91fd      	LD   R31,X+
000342 9631      	ADIW R30,1
000343 93fe      	ST   -X,R31
000344 93ee      	ST   -X,R30
                 _0x2000083:
000345 c001      	RJMP _0x2000084
                 _0x2000082:
000346 e000      	LDI  R16,LOW(0)
                 _0x2000084:
                 _0x2000081:
                 _0x2060005:
000347 2fe0      	MOV  R30,R16
000348 8108      	LDD  R16,Y+0
000349 9625      	ADIW R28,5
00034a 9508      	RET
                 __scanf_G100:
00034b 9725      	SBIW R28,5
00034c 940e 05c4 	CALL __SAVELOCR6
00034e e0e0      	LDI  R30,LOW(0)
00034f e0f0      	LDI  R31,HIGH(0)
000350 87e8      	STD  Y+8,R30
000351 87f9      	STD  Y+8+1,R31
000352 2f5e      	MOV  R21,R30
                 _0x2000085:
000353 89e9      	LDD  R30,Y+17
000354 89fa      	LDD  R31,Y+17+1
000355 9631      	ADIW R30,1
000356 8be9      	STD  Y+17,R30
000357 8bfa      	STD  Y+17+1,R31
000358 9731      	SBIW R30,1
000359 91e4      	LPM  R30,Z
00035a 2f2e      	MOV  R18,R30
00035b 30e0      	CPI  R30,0
00035c f411      	BRNE PC+3
00035d 940c 047c 	JMP _0x2000087
00035f 940e 0553 	CALL SUBOPT_0xD
000361 f0c1      	BREQ _0x2000088
                 _0x2000089:
000362 b7ed      	IN   R30,SPL
000363 b7fe      	IN   R31,SPH
000364 93fa      	ST   -Y,R31
000365 93ea      	ST   -Y,R30
000366 935f      	PUSH R21
000367 940e 0524 	CALL SUBOPT_0x7
000369 915f      	POP  R21
00036a 2f2e      	MOV  R18,R30
00036b 30e0      	CPI  R30,0
00036c f019      	BREQ _0x200008C
00036d 940e 0553 	CALL SUBOPT_0xD
00036f f409      	BRNE _0x200008D
                 _0x200008C:
000370 c007      	RJMP _0x200008B
                 _0x200008D:
000371 940e 0558 	CALL SUBOPT_0xE
000373 f41c      	BRGE _0x200008E
000374 efef      	LDI  R30,LOW(65535)
000375 efff      	LDI  R31,HIGH(65535)
000376 c107      	RJMP _0x2060003
                 _0x200008E:
000377 cfea      	RJMP _0x2000089
                 _0x200008B:
000378 2f52      	MOV  R21,R18
000379 c101      	RJMP _0x200008F
                 _0x2000088:
00037a 3225      	CPI  R18,37
00037b f011      	BREQ PC+3
00037c 940c 0463 	JMP _0x2000090
00037e e040      	LDI  R20,LOW(0)
                 _0x2000091:
00037f 89e9      	LDD  R30,Y+17
000380 89fa      	LDD  R31,Y+17+1
000381 9125      	LPM  R18,Z+
000382 8be9      	STD  Y+17,R30
000383 8bfa      	STD  Y+17+1,R31
000384 3320      	CPI  R18,48
000385 f010      	BRLO _0x2000095
000386 332a      	CPI  R18,58
000387 f008      	BRLO _0x2000094
                 _0x2000095:
000388 c007      	RJMP _0x2000093
                 _0x2000094:
000389 e0aa      	LDI  R26,LOW(10)
00038a 9f4a      	MUL  R20,R26
00038b 2d40      	MOV  R20,R0
00038c 2fe2      	MOV  R30,R18
00038d 53e0      	SUBI R30,LOW(48)
00038e 0f4e      	ADD  R20,R30
00038f cfef      	RJMP _0x2000091
                 _0x2000093:
000390 3020      	CPI  R18,0
000391 f409      	BRNE _0x2000097
000392 c0e9      	RJMP _0x2000087
                 _0x2000097:
                 _0x2000098:
000393 b7ed      	IN   R30,SPL
000394 b7fe      	IN   R31,SPH
000395 93fa      	ST   -Y,R31
000396 93ea      	ST   -Y,R30
000397 935f      	PUSH R21
000398 940e 0524 	CALL SUBOPT_0x7
00039a 915f      	POP  R21
00039b 2f3e      	MOV  R19,R30
00039c 93ea      	ST   -Y,R30
00039d 940e 04cd 	CALL _isspace
00039f 30e0      	CPI  R30,0
0003a0 f039      	BREQ _0x200009A
0003a1 940e 0558 	CALL SUBOPT_0xE
0003a3 f41c      	BRGE _0x200009B
0003a4 efef      	LDI  R30,LOW(65535)
0003a5 efff      	LDI  R31,HIGH(65535)
0003a6 c0d7      	RJMP _0x2060003
                 _0x200009B:
0003a7 cfeb      	RJMP _0x2000098
                 _0x200009A:
0003a8 3030      	CPI  R19,0
0003a9 f409      	BRNE _0x200009C
0003aa c0c8      	RJMP _0x200009D
                 _0x200009C:
0003ab 2f53      	MOV  R21,R19
0003ac 3040      	CPI  R20,0
0003ad f409      	BRNE _0x200009E
0003ae ef4f      	LDI  R20,LOW(255)
                 _0x200009E:
0003af 2fe2      	MOV  R30,R18
0003b0 36e3      	CPI  R30,LOW(0x63)
0003b1 f499      	BRNE _0x20000A2
0003b2 940e 055d 	CALL SUBOPT_0xF
0003b4 b7ed      	IN   R30,SPL
0003b5 b7fe      	IN   R31,SPH
0003b6 93fa      	ST   -Y,R31
0003b7 93ea      	ST   -Y,R30
0003b8 935f      	PUSH R21
0003b9 940e 0524 	CALL SUBOPT_0x7
0003bb 915f      	POP  R21
0003bc 01d8      	MOVW R26,R16
0003bd 93ec      	ST   X,R30
0003be 940e 0558 	CALL SUBOPT_0xE
0003c0 f41c      	BRGE _0x20000A3
0003c1 efef      	LDI  R30,LOW(65535)
0003c2 efff      	LDI  R31,HIGH(65535)
0003c3 c0ba      	RJMP _0x2060003
                 _0x20000A3:
0003c4 c098      	RJMP _0x20000A1
                 _0x20000A2:
0003c5 37e3      	CPI  R30,LOW(0x73)
0003c6 f541      	BRNE _0x20000AC
0003c7 940e 055d 	CALL SUBOPT_0xF
                 _0x20000A5:
0003c9 2fe4      	MOV  R30,R20
0003ca 5041      	SUBI R20,1
0003cb 30e0      	CPI  R30,0
0003cc f0f1      	BREQ _0x20000A7
0003cd b7ed      	IN   R30,SPL
0003ce b7fe      	IN   R31,SPH
0003cf 93fa      	ST   -Y,R31
0003d0 93ea      	ST   -Y,R30
0003d1 935f      	PUSH R21
0003d2 940e 0524 	CALL SUBOPT_0x7
0003d4 915f      	POP  R21
0003d5 2f2e      	MOV  R18,R30
0003d6 30e0      	CPI  R30,0
0003d7 f019      	BREQ _0x20000A9
0003d8 940e 0553 	CALL SUBOPT_0xD
0003da f039      	BREQ _0x20000A8
                 _0x20000A9:
0003db 940e 0558 	CALL SUBOPT_0xE
0003dd f41c      	BRGE _0x20000AB
0003de efef      	LDI  R30,LOW(65535)
0003df efff      	LDI  R31,HIGH(65535)
0003e0 c09d      	RJMP _0x2060003
                 _0x20000AB:
0003e1 c009      	RJMP _0x20000A7
                 _0x20000A8:
0003e2 931f      	PUSH R17
0003e3 930f      	PUSH R16
                +
0003e4 5f0f     +SUBI R16 , LOW ( - 1 )
0003e5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0003e6 2fe2      	MOV  R30,R18
0003e7 91af      	POP  R26
0003e8 91bf      	POP  R27
0003e9 93ec      	ST   X,R30
0003ea cfde      	RJMP _0x20000A5
                 _0x20000A7:
0003eb 01d8      	MOVW R26,R16
0003ec e0e0      	LDI  R30,LOW(0)
0003ed 93ec      	ST   X,R30
0003ee c06e      	RJMP _0x20000A1
                 _0x20000AC:
0003ef e0e1      	LDI  R30,LOW(1)
0003f0 87ea      	STD  Y+10,R30
0003f1 2fe2      	MOV  R30,R18
0003f2 36e4      	CPI  R30,LOW(0x64)
0003f3 f011      	BREQ _0x20000B1
0003f4 36e9      	CPI  R30,LOW(0x69)
0003f5 f419      	BRNE _0x20000B2
                 _0x20000B1:
0003f6 e0e0      	LDI  R30,LOW(0)
0003f7 87ea      	STD  Y+10,R30
0003f8 c002      	RJMP _0x20000B3
                 _0x20000B2:
0003f9 37e5      	CPI  R30,LOW(0x75)
0003fa f411      	BRNE _0x20000B4
                 _0x20000B3:
0003fb e03a      	LDI  R19,LOW(10)
0003fc c008      	RJMP _0x20000AF
                 _0x20000B4:
0003fd 37e8      	CPI  R30,LOW(0x78)
0003fe f411      	BRNE _0x20000B5
0003ff e130      	LDI  R19,LOW(16)
000400 c004      	RJMP _0x20000AF
                 _0x20000B5:
000401 32e5      	CPI  R30,LOW(0x25)
000402 f409      	BRNE _0x20000B8
000403 c05f      	RJMP _0x20000B7
                 _0x20000B8:
000404 c077      	RJMP _0x2060004
                 _0x20000AF:
000405 e0e0      	LDI  R30,LOW(0)
000406 83ee      	STD  Y+6,R30
000407 83ef      	STD  Y+6+1,R30
                 _0x20000B9:
000408 2fe4      	MOV  R30,R20
000409 5041      	SUBI R20,1
00040a 30e0      	CPI  R30,0
00040b f411      	BRNE PC+3
00040c 940c 0450 	JMP _0x20000BB
00040e b7ed      	IN   R30,SPL
00040f b7fe      	IN   R31,SPH
000410 93fa      	ST   -Y,R31
000411 93ea      	ST   -Y,R30
000412 935f      	PUSH R21
000413 940e 0524 	CALL SUBOPT_0x7
000415 915f      	POP  R21
000416 2f2e      	MOV  R18,R30
000417 32e1      	CPI  R30,LOW(0x21)
000418 f438      	BRSH _0x20000BC
000419 940e 0558 	CALL SUBOPT_0xE
00041b f41c      	BRGE _0x20000BD
00041c efef      	LDI  R30,LOW(65535)
00041d efff      	LDI  R31,HIGH(65535)
00041e c05f      	RJMP _0x2060003
                 _0x20000BD:
00041f c017      	RJMP _0x20000BE
                 _0x20000BC:
000420 85ea      	LDD  R30,Y+10
000421 30e0      	CPI  R30,0
000422 f439      	BRNE _0x20000BF
000423 322d      	CPI  R18,45
000424 f419      	BRNE _0x20000C0
000425 efef      	LDI  R30,LOW(255)
000426 87ea      	STD  Y+10,R30
000427 cfe0      	RJMP _0x20000B9
                 _0x20000C0:
000428 e0e1      	LDI  R30,LOW(1)
000429 87ea      	STD  Y+10,R30
                 _0x20000BF:
00042a 3130      	CPI  R19,16
00042b f431      	BRNE _0x20000C2
00042c 932a      	ST   -Y,R18
00042d 940e 04d7 	CALL _isxdigit
00042f 30e0      	CPI  R30,0
000430 f031      	BREQ _0x20000BE
000431 c007      	RJMP _0x20000C4
                 _0x20000C2:
000432 932a      	ST   -Y,R18
000433 940e 04c5 	CALL _isdigit
000435 30e0      	CPI  R30,0
000436 f411      	BRNE _0x20000C5
                 _0x20000BE:
000437 2f52      	MOV  R21,R18
000438 c017      	RJMP _0x20000BB
                 _0x20000C5:
                 _0x20000C4:
000439 3621      	CPI  R18,97
00043a f010      	BRLO _0x20000C6
00043b 5527      	SUBI R18,LOW(87)
00043c c005      	RJMP _0x20000C7
                 _0x20000C6:
00043d 3421      	CPI  R18,65
00043e f010      	BRLO _0x20000C8
00043f 5327      	SUBI R18,LOW(55)
000440 c001      	RJMP _0x20000C9
                 _0x20000C8:
000441 5320      	SUBI R18,LOW(48)
                 _0x20000C9:
                 _0x20000C7:
000442 2fe3      	MOV  R30,R19
000443 81ae      	LDD  R26,Y+6
000444 81bf      	LDD  R27,Y+6+1
000445 e0f0      	LDI  R31,0
000446 940e 0570 	CALL __MULW12U
000448 01df      	MOVW R26,R30
000449 2fe2      	MOV  R30,R18
00044a e0f0      	LDI  R31,0
00044b 0fea      	ADD  R30,R26
00044c 1ffb      	ADC  R31,R27
00044d 83ee      	STD  Y+6,R30
00044e 83ff      	STD  Y+6+1,R31
00044f cfb8      	RJMP _0x20000B9
                 _0x20000BB:
000450 940e 055d 	CALL SUBOPT_0xF
000452 85ea      	LDD  R30,Y+10
000453 81ae      	LDD  R26,Y+6
000454 81bf      	LDD  R27,Y+6+1
000455 e0f0      	LDI  R31,0
000456 fde7      	SBRC R30,7
000457 efff      	SER  R31
000458 940e 0570 	CALL __MULW12U
00045a 01d8      	MOVW R26,R16
00045b 93ed      	ST   X+,R30
00045c 93fc      	ST   X,R31
                 _0x20000A1:
00045d 85e8      	LDD  R30,Y+8
00045e 85f9      	LDD  R31,Y+8+1
00045f 9631      	ADIW R30,1
000460 87e8      	STD  Y+8,R30
000461 87f9      	STD  Y+8+1,R31
000462 c018      	RJMP _0x20000CA
                 _0x2000090:
                 _0x20000B7:
000463 b7ed      	IN   R30,SPL
000464 b7fe      	IN   R31,SPH
000465 93fa      	ST   -Y,R31
000466 93ea      	ST   -Y,R30
000467 935f      	PUSH R21
000468 940e 0524 	CALL SUBOPT_0x7
00046a 915f      	POP  R21
00046b 17e2      	CP   R30,R18
00046c f071      	BREQ _0x20000CB
00046d 940e 0558 	CALL SUBOPT_0xE
00046f f41c      	BRGE _0x20000CC
000470 efef      	LDI  R30,LOW(65535)
000471 efff      	LDI  R31,HIGH(65535)
000472 c00b      	RJMP _0x2060003
                 _0x20000CC:
                 _0x200009D:
000473 85e8      	LDD  R30,Y+8
000474 85f9      	LDD  R31,Y+8+1
000475 9730      	SBIW R30,0
000476 f419      	BRNE _0x20000CD
000477 efef      	LDI  R30,LOW(65535)
000478 efff      	LDI  R31,HIGH(65535)
000479 c004      	RJMP _0x2060003
                 _0x20000CD:
00047a c001      	RJMP _0x2000087
                 _0x20000CB:
                 _0x20000CA:
                 _0x200008F:
00047b ced7      	RJMP _0x2000085
                 _0x2000087:
                 _0x2060004:
00047c 85e8      	LDD  R30,Y+8
00047d 85f9      	LDD  R31,Y+8+1
                 _0x2060003:
00047e 940e 05cb 	CALL __LOADLOCR6
000480 9663      	ADIW R28,19
000481 9508      	RET
                 _sscanf:
000482 92ff      	PUSH R15
000483 2ef8      	MOV  R15,R24
000484 9723      	SBIW R28,3
000485 931a      	ST   -Y,R17
000486 930a      	ST   -Y,R16
000487 01de      	MOVW R26,R28
000488 9617      	ADIW R26,7
000489 940e 053e 	CALL SUBOPT_0xA
00048b 9730      	SBIW R30,0
00048c f419      	BRNE _0x20000CE
00048d efef      	LDI  R30,LOW(65535)
00048e efff      	LDI  R31,HIGH(65535)
00048f c030      	RJMP _0x2060002
                 _0x20000CE:
000490 01de      	MOVW R26,R28
000491 9611      	ADIW R26,1
000492 940e 0568 	CALL __ADDW2R15
000494 018d      	MOVW R16,R26
000495 01de      	MOVW R26,R28
000496 9617      	ADIW R26,7
000497 940e 053e 	CALL SUBOPT_0xA
000499 83eb      	STD  Y+3,R30
00049a 83fc      	STD  Y+3+1,R31
00049b 01de      	MOVW R26,R28
00049c 9615      	ADIW R26,5
00049d 940e 053e 	CALL SUBOPT_0xA
00049f 940e 0543 	CALL SUBOPT_0xB
0004a1 e2e6      	LDI  R30,LOW(_get_buff_G100)
0004a2 e0f3      	LDI  R31,HIGH(_get_buff_G100)
0004a3 c015      	RJMP _0x2060001
                 _scanf:
0004a4 92ff      	PUSH R15
0004a5 2ef8      	MOV  R15,R24
0004a6 9723      	SBIW R28,3
0004a7 931a      	ST   -Y,R17
0004a8 930a      	ST   -Y,R16
0004a9 01de      	MOVW R26,R28
0004aa 9611      	ADIW R26,1
0004ab 940e 0568 	CALL __ADDW2R15
0004ad 018d      	MOVW R16,R26
0004ae e0e0      	LDI  R30,LOW(0)
0004af 83eb      	STD  Y+3,R30
0004b0 83ec      	STD  Y+3+1,R30
0004b1 01de      	MOVW R26,R28
0004b2 9615      	ADIW R26,5
0004b3 940e 053e 	CALL SUBOPT_0xA
0004b5 940e 0543 	CALL SUBOPT_0xB
0004b7 e1eb      	LDI  R30,LOW(_get_usart_G100)
0004b8 e0f3      	LDI  R31,HIGH(_get_usart_G100)
                 _0x2060001:
0004b9 93fa      	ST   -Y,R31
0004ba 93ea      	ST   -Y,R30
0004bb 01fe      	MOVW R30,R28
0004bc 9638      	ADIW R30,8
0004bd 93fa      	ST   -Y,R31
0004be 93ea      	ST   -Y,R30
0004bf de8b      	RCALL __scanf_G100
                 _0x2060002:
0004c0 8119      	LDD  R17,Y+1
0004c1 8108      	LDD  R16,Y+0
0004c2 9625      	ADIW R28,5
0004c3 90ff      	POP  R15
0004c4 9508      	RET
                 
                 	.CSEG
                 _isdigit:
0004c5 e0e1          ldi  r30,1
0004c6 91f9          ld   r31,y+
0004c7 33f0          cpi  r31,'0'
0004c8 f010          brlo isdigit0
0004c9 33fa          cpi  r31,'9'+1
0004ca f008          brlo isdigit1
                 isdigit0:
0004cb 27ee          clr  r30
                 isdigit1:
0004cc 9508          ret
                 _isspace:
0004cd e0e1          ldi  r30,1
0004ce 91f9          ld   r31,y+
0004cf 32f0          cpi  r31,' '
0004d0 f029          breq isspace1
0004d1 30f9          cpi  r31,9
0004d2 f010          brlo isspace0
0004d3 30fe          cpi  r31,13+1
0004d4 f008          brlo isspace1
                 isspace0:
0004d5 27ee          clr  r30
                 isspace1:
0004d6 9508          ret
                 _isxdigit:
0004d7 e0e1          ldi  r30,1
0004d8 91f9          ld   r31,y+
0004d9 53f0          subi r31,0x30
0004da f040          brcs isxdigit0
0004db 30fa          cpi  r31,10
0004dc f038          brcs isxdigit1
0004dd 75ff          andi r31,0x5f
0004de 50f7          subi r31,7
0004df 30fa          cpi  r31,10
0004e0 f010          brcs isxdigit0
0004e1 31f0          cpi  r31,16
0004e2 f008          brcs isxdigit1
                 isxdigit0:
0004e3 27ee          clr  r30
                 isxdigit1:
0004e4 9508          ret
                 
                 	.CSEG
                 _strlen:
0004e5 91a9          ld   r26,y+
0004e6 91b9          ld   r27,y+
0004e7 27ee          clr  r30
0004e8 27ff          clr  r31
                 strlen0:
0004e9 916d          ld   r22,x+
0004ea 2366          tst  r22
0004eb f011          breq strlen1
0004ec 9631          adiw r30,1
0004ed cffb          rjmp strlen0
                 strlen1:
0004ee 9508          ret
                 _strlenf:
0004ef 27aa          clr  r26
0004f0 27bb          clr  r27
0004f1 91e9          ld   r30,y+
0004f2 91f9          ld   r31,y+
                 strlenf0:
0004f3 9005      	lpm  r0,z+
0004f4 2000          tst  r0
0004f5 f011          breq strlenf1
0004f6 9611          adiw r26,1
0004f7 cffb          rjmp strlenf0
                 strlenf1:
0004f8 01fd          movw r30,r26
0004f9 9508          ret
                 
                 	.DSEG
                 _sep1:
000300           	.BYTE 0x1
                 _sep2:
000301           	.BYTE 0x1
                 _Cadena:
000302           	.BYTE 0x14
                 _dia:
000316           	.BYTE 0x2
                 _mes:
000318           	.BYTE 0x2
                 _diasemana:
00031a           	.BYTE 0x2
                 _year:
00031c           	.BYTE 0x2
                 _dias:
00031e           	.BYTE 0x46
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0004fa 93fa      	ST   -Y,R31
0004fb 93ea      	ST   -Y,R30
0004fc e080      	LDI  R24,0
0004fd 940e 02f8 	CALL _printf
0004ff 9622      	ADIW R28,2
000500 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000501 2766      	CLR  R22
000502 2777      	CLR  R23
000503 940e 05bf 	CALL __PUTPARD1
000505 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000506 91a0 0316 	LDS  R26,_dia
000508 91b0 0317 	LDS  R27,_dia+1
00050a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00050b 91a0 0318 	LDS  R26,_mes
00050d 91b0 0319 	LDS  R27,_mes+1
00050f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000510 91a0 031c 	LDS  R26,_year
000512 91b0 031d 	LDS  R27,_year+1
000514 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5:
000515 933a      	ST   -Y,R19
000516 85ed      	LDD  R30,Y+13
000517 85fe      	LDD  R31,Y+13+1
000518 93fa      	ST   -Y,R31
000519 93ea      	ST   -Y,R30
00051a 89e9      	LDD  R30,Y+17
00051b 89fa      	LDD  R31,Y+17+1
00051c 9509      	ICALL
00051d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
00051e 89e8      	LDD  R30,Y+16
00051f 89f9      	LDD  R31,Y+16+1
000520 9734      	SBIW R30,4
000521 8be8      	STD  Y+16,R30
000522 8bf9      	STD  Y+16+1,R31
000523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x7:
000524 85ed      	LDD  R30,Y+13
000525 85fe      	LDD  R31,Y+13+1
000526 93fa      	ST   -Y,R31
000527 93ea      	ST   -Y,R30
000528 89e9      	LDD  R30,Y+17
000529 89fa      	LDD  R31,Y+17+1
00052a 9509      	ICALL
00052b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00052c 89a8      	LDD  R26,Y+16
00052d 89b9      	LDD  R27,Y+16+1
00052e 9614      	ADIW R26,4
00052f 940e 05b7 	CALL __GETW1P
000531 83ee      	STD  Y+6,R30
000532 83ff      	STD  Y+6+1,R31
000533 93fa      	ST   -Y,R31
000534 93ea      	ST   -Y,R30
000535 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
000536 89a8      	LDD  R26,Y+16
000537 89b9      	LDD  R27,Y+16+1
000538 9614      	ADIW R26,4
000539 940e 05b7 	CALL __GETW1P
00053b 87ea      	STD  Y+10,R30
00053c 87fb      	STD  Y+10+1,R31
00053d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
00053e 940e 0568 	CALL __ADDW2R15
000540 940e 05b7 	CALL __GETW1P
000542 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
000543 93fa      	ST   -Y,R31
000544 93ea      	ST   -Y,R30
000545 931a      	ST   -Y,R17
000546 930a      	ST   -Y,R16
000547 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
000548 930a      	ST   -Y,R16
000549 81a9      	LDD  R26,Y+1
00054a 81ba      	LDD  R27,Y+1+1
00054b e0e0      	LDI  R30,LOW(0)
00054c 93ec      	ST   X,R30
00054d 81ab      	LDD  R26,Y+3
00054e 81bc      	LDD  R27,Y+3+1
00054f 91ec      	LD   R30,X
000550 2f0e      	MOV  R16,R30
000551 30e0      	CPI  R30,0
000552 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
000553 932a      	ST   -Y,R18
000554 940e 04cd 	CALL _isspace
000556 30e0      	CPI  R30,0
000557 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xE:
000558 85ab      	LDD  R26,Y+11
000559 85bc      	LDD  R27,Y+11+1
00055a 91ac      	LD   R26,X
00055b 30a0      	CPI  R26,0
00055c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
00055d 85ef      	LDD  R30,Y+15
00055e 89f8      	LDD  R31,Y+15+1
00055f 9734      	SBIW R30,4
000560 87ef      	STD  Y+15,R30
000561 8bf8      	STD  Y+15+1,R31
000562 85af      	LDD  R26,Y+15
000563 89b8      	LDD  R27,Y+15+1
000564 9614      	ADIW R26,4
000565 910d      	LD   R16,X+
000566 911c      	LD   R17,X
000567 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
000568 2400      	CLR  R0
000569 0daf      	ADD  R26,R15
00056a 1db0      	ADC  R27,R0
00056b 9508      	RET
                 
                 __ANEGW1:
00056c 95f1      	NEG  R31
00056d 95e1      	NEG  R30
00056e 40f0      	SBCI R31,0
00056f 9508      	RET
                 
                 __MULW12U:
000570 9ffa      	MUL  R31,R26
000571 2df0      	MOV  R31,R0
000572 9feb      	MUL  R30,R27
000573 0df0      	ADD  R31,R0
000574 9fea      	MUL  R30,R26
000575 2de0      	MOV  R30,R0
000576 0df1      	ADD  R31,R1
000577 9508      	RET
                 
                 __MULB1W2U:
000578 2f6e      	MOV  R22,R30
000579 9f6a      	MUL  R22,R26
00057a 01f0      	MOVW R30,R0
00057b 9f6b      	MUL  R22,R27
00057c 0df0      	ADD  R31,R0
00057d 9508      	RET
                 
                 __MULW12:
00057e d02a      	RCALL __CHKSIGNW
00057f dff0      	RCALL __MULW12U
000580 f40e      	BRTC __MULW121
000581 dfea      	RCALL __ANEGW1
                 __MULW121:
000582 9508      	RET
                 
                 __DIVW21U:
000583 2400      	CLR  R0
000584 2411      	CLR  R1
000585 e190      	LDI  R25,16
                 __DIVW21U1:
000586 0faa      	LSL  R26
000587 1fbb      	ROL  R27
000588 1c00      	ROL  R0
000589 1c11      	ROL  R1
00058a 1a0e      	SUB  R0,R30
00058b 0a1f      	SBC  R1,R31
00058c f418      	BRCC __DIVW21U2
00058d 0e0e      	ADD  R0,R30
00058e 1e1f      	ADC  R1,R31
00058f c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000590 60a1      	SBR  R26,1
                 __DIVW21U3:
000591 959a      	DEC  R25
000592 f799      	BRNE __DIVW21U1
000593 01fd      	MOVW R30,R26
000594 01d0      	MOVW R26,R0
000595 9508      	RET
                 
                 __DIVW21:
000596 d012      	RCALL __CHKSIGNW
000597 dfeb      	RCALL __DIVW21U
000598 f40e      	BRTC __DIVW211
000599 dfd2      	RCALL __ANEGW1
                 __DIVW211:
00059a 9508      	RET
                 
                 __MODW21:
00059b 94e8      	CLT
00059c ffb7      	SBRS R27,7
00059d c004      	RJMP __MODW211
00059e 95a0      	COM  R26
00059f 95b0      	COM  R27
0005a0 9611      	ADIW R26,1
0005a1 9468      	SET
                 __MODW211:
0005a2 fdf7      	SBRC R31,7
0005a3 dfc8      	RCALL __ANEGW1
0005a4 dfde      	RCALL __DIVW21U
0005a5 01fd      	MOVW R30,R26
0005a6 f40e      	BRTC __MODW212
0005a7 dfc4      	RCALL __ANEGW1
                 __MODW212:
0005a8 9508      	RET
                 
                 __CHKSIGNW:
0005a9 94e8      	CLT
0005aa fff7      	SBRS R31,7
0005ab c002      	RJMP __CHKSW1
0005ac dfbf      	RCALL __ANEGW1
0005ad 9468      	SET
                 __CHKSW1:
0005ae ffb7      	SBRS R27,7
0005af c006      	RJMP __CHKSW2
0005b0 95a0      	COM  R26
0005b1 95b0      	COM  R27
0005b2 9611      	ADIW R26,1
0005b3 f800      	BLD  R0,0
0005b4 9403      	INC  R0
0005b5 fa00      	BST  R0,0
                 __CHKSW2:
0005b6 9508      	RET
                 
                 __GETW1P:
0005b7 91ed      	LD   R30,X+
0005b8 91fc      	LD   R31,X
0005b9 9711      	SBIW R26,1
0005ba 9508      	RET
                 
                 __GETW1PF:
0005bb 9005      	LPM  R0,Z+
0005bc 91f4      	LPM  R31,Z
0005bd 2de0      	MOV  R30,R0
0005be 9508      	RET
                 
                 __PUTPARD1:
0005bf 937a      	ST   -Y,R23
0005c0 936a      	ST   -Y,R22
0005c1 93fa      	ST   -Y,R31
0005c2 93ea      	ST   -Y,R30
0005c3 9508      	RET
                 
                 __SAVELOCR6:
0005c4 935a      	ST   -Y,R21
                 __SAVELOCR5:
0005c5 934a      	ST   -Y,R20
                 __SAVELOCR4:
0005c6 933a      	ST   -Y,R19
                 __SAVELOCR3:
0005c7 932a      	ST   -Y,R18
                 __SAVELOCR2:
0005c8 931a      	ST   -Y,R17
0005c9 930a      	ST   -Y,R16
0005ca 9508      	RET
                 
                 __LOADLOCR6:
0005cb 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0005cc 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0005cd 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0005ce 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0005cf 8119      	LDD  R17,Y+1
0005d0 8108      	LD   R16,Y
0005d1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  25 r1 :   6 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   9 
r16:  38 r17:  35 r18:  34 r19:  34 r20:  27 r21:  25 r22:  13 r23:   4 
r24:  14 r25:   4 r26: 112 r27:  49 r28:  27 r29:   1 r30: 300 r31: 156 
x  :  34 y  : 219 z  :  17 
Registers used: 22 out of 35 (62.9%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   8 add   :  13 
adiw  :  38 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   4 break :   0 breq  :  30 
brge  :  10 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  14 
brlt  :   2 brmi  :   0 brne  :  40 brpl  :   1 brsh  :   3 brtc  :   3 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  : 101 
cbi   :   0 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  14 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :   4 cpc   :   1 cpi   :  70 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  13 inc   :   1 jmp   :  33 ld    :  25 ldd   :  96 ldi   : 143 
lds   :  17 lpm   :  17 lsl   :   1 lsr   :   0 mov   :  38 movw  :  28 
mul   :   7 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :   7 pop   :  10 push  :  11 rcall :  15 ret   :  43 
reti  :   0 rjmp  :  97 rol   :   3 ror   :   0 sbc   :   2 sbci  :   3 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  25 sbr   :   1 sbrc  :   4 
sbrs  :  13 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   1 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  85 std   :  50 sts   :  12 sub   :   2 subi  :  23 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 63 out of 116 (54.3%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000ba4   2756    224   2980   32768   9.1%
[.dseg] 0x000100 0x000364      0    100    100    2303   4.3%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 2 warnings
