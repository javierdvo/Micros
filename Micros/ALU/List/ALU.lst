
AVRASM ver. 2.1.30  C:\Users\Javier\SkyDrive\Documents\Micros\ALU\List\ALU.asm Sun Nov 02 22:08:26 2014

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : Off
                 ;Automatic register allocation : Off
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0034 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 __RESET:
000034 94f8      	CLI
000035 27ee      	CLR  R30
000036 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000037 e0f1      	LDI  R31,1
000038 bff5      	OUT  MCUCR,R31
000039 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
00003a e1f8      	LDI  R31,0x18
00003b 95a8      	WDR
00003c b7a4      	IN   R26,MCUSR
00003d 7fa7      	CBR  R26,8
00003e bfa4      	OUT  MCUSR,R26
00003f 93f0 0060 	STS  WDTCSR,R31
000041 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
000043 e08d      	LDI  R24,(14-2)+1
000044 e0a2      	LDI  R26,2
000045 27bb      	CLR  R27
                 __CLEAR_REG:
000046 93ed      	ST   X+,R30
000047 958a      	DEC  R24
000048 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000049 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004a e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004b e0a0      	LDI  R26,LOW(__SRAM_START)
00004c e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00004d 93ed      	ST   X+,R30
00004e 9701      	SBIW R24,1
00004f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
000050 e0e0      	LDI  R30,__GPIOR0_INIT
000051 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000052 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000053 bfed      	OUT  SPL,R30
000054 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000055 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000056 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000057 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000058 940c 005a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ; #include <mega328P.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;  #include <delay.h>
                 ;
                 ;
                 ;
                 ; void main (void){
                 ; 0000 0006 void main (void){
                 
                 	.CSEG
                 _main:
                 ; 0000 0007     DDRD=0xFF; //PB1 de salida
00005a efef      	LDI  R30,LOW(255)
00005b b9ea      	OUT  0xA,R30
                 ; 0000 0008     PORTB=0xFF;
00005c b9e5      	OUT  0x5,R30
                 ; 0000 0009     PORTC=0xFF;
00005d b9e8      	OUT  0x8,R30
                 ; 0000 000A 
                 ; 0000 000B     while(1)
                 _0x3:
                 ; 0000 000C     {
                 ; 0000 000D         switch(PINC&0x07){
00005e b1e6      	IN   R30,0x6
00005f 70e7      	ANDI R30,LOW(0x7)
                 ; 0000 000E 
                 ; 0000 000F             case 0x00:
000060 30e0      	CPI  R30,0
000061 f4a9      	BRNE _0x9
                 ; 0000 0010             {
                 ; 0000 0011                  PORTD.0=!PINB.0;
000062 9b18      	SBIS 0x3,0
000063 c002      	RJMP _0xA
000064 9858      	CBI  0xB,0
000065 c001      	RJMP _0xB
                 _0xA:
000066 9a58      	SBI  0xB,0
                 _0xB:
                 ; 0000 0012                  PORTD.1=!PINB.1;
000067 9b19      	SBIS 0x3,1
000068 c002      	RJMP _0xC
000069 9859      	CBI  0xB,1
00006a c001      	RJMP _0xD
                 _0xC:
00006b 9a59      	SBI  0xB,1
                 _0xD:
                 ; 0000 0013                  PORTD.2=!PINB.2;
00006c 9b1a      	SBIS 0x3,2
00006d c002      	RJMP _0xE
00006e 985a      	CBI  0xB,2
00006f c001      	RJMP _0xF
                 _0xE:
000070 9a5a      	SBI  0xB,2
                 _0xF:
                 ; 0000 0014                  PORTD.3=!PINB.3;
000071 9b1b      	SBIS 0x3,3
000072 c002      	RJMP _0x10
000073 985b      	CBI  0xB,3
000074 c001      	RJMP _0x11
                 _0x10:
000075 9a5b      	SBI  0xB,3
                 _0x11:
                 ; 0000 0015                  break;
000076 c162      	RJMP _0x8
                 ; 0000 0016             }
                 ; 0000 0017             case 0x01:
                 _0x9:
000077 30e1      	CPI  R30,LOW(0x1)
000078 f589      	BRNE _0x12
                 ; 0000 0018             {
                 ; 0000 0019                  PORTD.0=PINB.0&&PINB.4;
000079 9b18      	SBIS 0x3,0
00007a c004      	RJMP _0x13
00007b 9b1c      	SBIS 0x3,4
00007c c002      	RJMP _0x13
00007d e0e1      	LDI  R30,1
00007e c001      	RJMP _0x14
                 _0x13:
00007f e0e0      	LDI  R30,0
                 _0x14:
000080 30e0      	CPI  R30,0
000081 f411      	BRNE _0x15
000082 9858      	CBI  0xB,0
000083 c001      	RJMP _0x16
                 _0x15:
000084 9a58      	SBI  0xB,0
                 _0x16:
                 ; 0000 001A                  PORTD.1=PINB.1&&PINB.5;
000085 9b19      	SBIS 0x3,1
000086 c004      	RJMP _0x17
000087 9b1d      	SBIS 0x3,5
000088 c002      	RJMP _0x17
000089 e0e1      	LDI  R30,1
00008a c001      	RJMP _0x18
                 _0x17:
00008b e0e0      	LDI  R30,0
                 _0x18:
00008c 30e0      	CPI  R30,0
00008d f411      	BRNE _0x19
00008e 9859      	CBI  0xB,1
00008f c001      	RJMP _0x1A
                 _0x19:
000090 9a59      	SBI  0xB,1
                 _0x1A:
                 ; 0000 001B                  PORTD.2=PINB.2&&PINB.6;
000091 9b1a      	SBIS 0x3,2
000092 c004      	RJMP _0x1B
000093 9b1e      	SBIS 0x3,6
000094 c002      	RJMP _0x1B
000095 e0e1      	LDI  R30,1
000096 c001      	RJMP _0x1C
                 _0x1B:
000097 e0e0      	LDI  R30,0
                 _0x1C:
000098 30e0      	CPI  R30,0
000099 f411      	BRNE _0x1D
00009a 985a      	CBI  0xB,2
00009b c001      	RJMP _0x1E
                 _0x1D:
00009c 9a5a      	SBI  0xB,2
                 _0x1E:
                 ; 0000 001C                  PORTD.3=PINB.3&&PINB.7;
00009d 9b1b      	SBIS 0x3,3
00009e c004      	RJMP _0x1F
00009f 9b1f      	SBIS 0x3,7
0000a0 c002      	RJMP _0x1F
0000a1 e0e1      	LDI  R30,1
0000a2 c001      	RJMP _0x20
                 _0x1F:
0000a3 e0e0      	LDI  R30,0
                 _0x20:
0000a4 30e0      	CPI  R30,0
0000a5 f411      	BRNE _0x21
0000a6 985b      	CBI  0xB,3
0000a7 c001      	RJMP _0x22
                 _0x21:
0000a8 9a5b      	SBI  0xB,3
                 _0x22:
                 ; 0000 001D                  break;
0000a9 c12f      	RJMP _0x8
                 ; 0000 001E             }
                 ; 0000 001F             case 0x02:
                 _0x12:
0000aa 30e2      	CPI  R30,LOW(0x2)
0000ab f589      	BRNE _0x23
                 ; 0000 0020             {
                 ; 0000 0021                  PORTD.0=!(PINB.0&&PINB.4);
0000ac 9b18      	SBIS 0x3,0
0000ad c004      	RJMP _0x24
0000ae 9b1c      	SBIS 0x3,4
0000af c002      	RJMP _0x24
0000b0 e0e1      	LDI  R30,1
0000b1 c001      	RJMP _0x25
                 _0x24:
0000b2 e0e0      	LDI  R30,0
                 _0x25:
0000b3 30e0      	CPI  R30,0
0000b4 f011      	BREQ _0x26
0000b5 9858      	CBI  0xB,0
0000b6 c001      	RJMP _0x27
                 _0x26:
0000b7 9a58      	SBI  0xB,0
                 _0x27:
                 ; 0000 0022                  PORTD.1=!(PINB.1&&PINB.5);
0000b8 9b19      	SBIS 0x3,1
0000b9 c004      	RJMP _0x28
0000ba 9b1d      	SBIS 0x3,5
0000bb c002      	RJMP _0x28
0000bc e0e1      	LDI  R30,1
0000bd c001      	RJMP _0x29
                 _0x28:
0000be e0e0      	LDI  R30,0
                 _0x29:
0000bf 30e0      	CPI  R30,0
0000c0 f011      	BREQ _0x2A
0000c1 9859      	CBI  0xB,1
0000c2 c001      	RJMP _0x2B
                 _0x2A:
0000c3 9a59      	SBI  0xB,1
                 _0x2B:
                 ; 0000 0023                  PORTD.2=!(PINB.2&&PINB.6);
0000c4 9b1a      	SBIS 0x3,2
0000c5 c004      	RJMP _0x2C
0000c6 9b1e      	SBIS 0x3,6
0000c7 c002      	RJMP _0x2C
0000c8 e0e1      	LDI  R30,1
0000c9 c001      	RJMP _0x2D
                 _0x2C:
0000ca e0e0      	LDI  R30,0
                 _0x2D:
0000cb 30e0      	CPI  R30,0
0000cc f011      	BREQ _0x2E
0000cd 985a      	CBI  0xB,2
0000ce c001      	RJMP _0x2F
                 _0x2E:
0000cf 9a5a      	SBI  0xB,2
                 _0x2F:
                 ; 0000 0024                  PORTD.3=!(PINB.3&&PINB.7);
0000d0 9b1b      	SBIS 0x3,3
0000d1 c004      	RJMP _0x30
0000d2 9b1f      	SBIS 0x3,7
0000d3 c002      	RJMP _0x30
0000d4 e0e1      	LDI  R30,1
0000d5 c001      	RJMP _0x31
                 _0x30:
0000d6 e0e0      	LDI  R30,0
                 _0x31:
0000d7 30e0      	CPI  R30,0
0000d8 f011      	BREQ _0x32
0000d9 985b      	CBI  0xB,3
0000da c001      	RJMP _0x33
                 _0x32:
0000db 9a5b      	SBI  0xB,3
                 _0x33:
                 ; 0000 0025                  break;
0000dc c0fc      	RJMP _0x8
                 ; 0000 0026             }
                 ; 0000 0027            case 0x03:
                 _0x23:
0000dd 30e3      	CPI  R30,LOW(0x3)
0000de f589      	BRNE _0x34
                 ; 0000 0028             {
                 ; 0000 0029                  PORTD.0=PINB.0||PINB.4;
0000df 9918      	SBIC 0x3,0
0000e0 c004      	RJMP _0x35
0000e1 991c      	SBIC 0x3,4
0000e2 c002      	RJMP _0x35
0000e3 e0e0      	LDI  R30,0
0000e4 c001      	RJMP _0x36
                 _0x35:
0000e5 e0e1      	LDI  R30,1
                 _0x36:
0000e6 30e0      	CPI  R30,0
0000e7 f411      	BRNE _0x37
0000e8 9858      	CBI  0xB,0
0000e9 c001      	RJMP _0x38
                 _0x37:
0000ea 9a58      	SBI  0xB,0
                 _0x38:
                 ; 0000 002A                  PORTD.1=PINB.1||PINB.5;
0000eb 9919      	SBIC 0x3,1
0000ec c004      	RJMP _0x39
0000ed 991d      	SBIC 0x3,5
0000ee c002      	RJMP _0x39
0000ef e0e0      	LDI  R30,0
0000f0 c001      	RJMP _0x3A
                 _0x39:
0000f1 e0e1      	LDI  R30,1
                 _0x3A:
0000f2 30e0      	CPI  R30,0
0000f3 f411      	BRNE _0x3B
0000f4 9859      	CBI  0xB,1
0000f5 c001      	RJMP _0x3C
                 _0x3B:
0000f6 9a59      	SBI  0xB,1
                 _0x3C:
                 ; 0000 002B                  PORTD.2=PINB.2||PINB.6;
0000f7 991a      	SBIC 0x3,2
0000f8 c004      	RJMP _0x3D
0000f9 991e      	SBIC 0x3,6
0000fa c002      	RJMP _0x3D
0000fb e0e0      	LDI  R30,0
0000fc c001      	RJMP _0x3E
                 _0x3D:
0000fd e0e1      	LDI  R30,1
                 _0x3E:
0000fe 30e0      	CPI  R30,0
0000ff f411      	BRNE _0x3F
000100 985a      	CBI  0xB,2
000101 c001      	RJMP _0x40
                 _0x3F:
000102 9a5a      	SBI  0xB,2
                 _0x40:
                 ; 0000 002C                  PORTD.3=PINB.3||PINB.7;
000103 991b      	SBIC 0x3,3
000104 c004      	RJMP _0x41
000105 991f      	SBIC 0x3,7
000106 c002      	RJMP _0x41
000107 e0e0      	LDI  R30,0
000108 c001      	RJMP _0x42
                 _0x41:
000109 e0e1      	LDI  R30,1
                 _0x42:
00010a 30e0      	CPI  R30,0
00010b f411      	BRNE _0x43
00010c 985b      	CBI  0xB,3
00010d c001      	RJMP _0x44
                 _0x43:
00010e 9a5b      	SBI  0xB,3
                 _0x44:
                 ; 0000 002D                  break;
00010f c0c9      	RJMP _0x8
                 ; 0000 002E             }
                 ; 0000 002F            case 0x04:
                 _0x34:
000110 30e4      	CPI  R30,LOW(0x4)
000111 f589      	BRNE _0x45
                 ; 0000 0030             {
                 ; 0000 0031                  PORTD.0=!(PINB.0||PINB.4);
000112 9918      	SBIC 0x3,0
000113 c004      	RJMP _0x46
000114 991c      	SBIC 0x3,4
000115 c002      	RJMP _0x46
000116 e0e0      	LDI  R30,0
000117 c001      	RJMP _0x47
                 _0x46:
000118 e0e1      	LDI  R30,1
                 _0x47:
000119 30e0      	CPI  R30,0
00011a f011      	BREQ _0x48
00011b 9858      	CBI  0xB,0
00011c c001      	RJMP _0x49
                 _0x48:
00011d 9a58      	SBI  0xB,0
                 _0x49:
                 ; 0000 0032                  PORTD.1=!(PINB.1||PINB.5);
00011e 9919      	SBIC 0x3,1
00011f c004      	RJMP _0x4A
000120 991d      	SBIC 0x3,5
000121 c002      	RJMP _0x4A
000122 e0e0      	LDI  R30,0
000123 c001      	RJMP _0x4B
                 _0x4A:
000124 e0e1      	LDI  R30,1
                 _0x4B:
000125 30e0      	CPI  R30,0
000126 f011      	BREQ _0x4C
000127 9859      	CBI  0xB,1
000128 c001      	RJMP _0x4D
                 _0x4C:
000129 9a59      	SBI  0xB,1
                 _0x4D:
                 ; 0000 0033                  PORTD.2=!(PINB.2||PINB.6);
00012a 991a      	SBIC 0x3,2
00012b c004      	RJMP _0x4E
00012c 991e      	SBIC 0x3,6
00012d c002      	RJMP _0x4E
00012e e0e0      	LDI  R30,0
00012f c001      	RJMP _0x4F
                 _0x4E:
000130 e0e1      	LDI  R30,1
                 _0x4F:
000131 30e0      	CPI  R30,0
000132 f011      	BREQ _0x50
000133 985a      	CBI  0xB,2
000134 c001      	RJMP _0x51
                 _0x50:
000135 9a5a      	SBI  0xB,2
                 _0x51:
                 ; 0000 0034                  PORTD.3=!(PINB.3||PINB.7);
000136 991b      	SBIC 0x3,3
000137 c004      	RJMP _0x52
000138 991f      	SBIC 0x3,7
000139 c002      	RJMP _0x52
00013a e0e0      	LDI  R30,0
00013b c001      	RJMP _0x53
                 _0x52:
00013c e0e1      	LDI  R30,1
                 _0x53:
00013d 30e0      	CPI  R30,0
00013e f011      	BREQ _0x54
00013f 985b      	CBI  0xB,3
000140 c001      	RJMP _0x55
                 _0x54:
000141 9a5b      	SBI  0xB,3
                 _0x55:
                 ; 0000 0035                  break;
000142 c096      	RJMP _0x8
                 ; 0000 0036             }
                 ; 0000 0037             case 0x05:
                 _0x45:
000143 30e5      	CPI  R30,LOW(0x5)
000144 f011      	BREQ PC+3
000145 940c 0188 	JMP _0x56
                 ; 0000 0038             {
                 ; 0000 0039                  PORTD.0=((PINB.0&&(!PINB.4))||(PINB.4&&(!PINB.0)));
000147 9b18      	SBIS 0x3,0
000148 c002      	RJMP _0x57
000149 9b1c      	SBIS 0x3,4
00014a c006      	RJMP _0x59
                 _0x57:
00014b 9b1c      	SBIS 0x3,4
00014c c002      	RJMP _0x5A
00014d 9b18      	SBIS 0x3,0
00014e c002      	RJMP _0x59
                 _0x5A:
00014f e0e0      	LDI  R30,0
000150 c001      	RJMP _0x5C
                 _0x59:
000151 e0e1      	LDI  R30,1
                 _0x5C:
000152 30e0      	CPI  R30,0
000153 f411      	BRNE _0x5D
000154 9858      	CBI  0xB,0
000155 c001      	RJMP _0x5E
                 _0x5D:
000156 9a58      	SBI  0xB,0
                 _0x5E:
                 ; 0000 003A                  PORTD.1=((PINB.1&&(!PINB.5))||(PINB.5&&(!PINB.1)));
000157 9b19      	SBIS 0x3,1
000158 c002      	RJMP _0x5F
000159 9b1d      	SBIS 0x3,5
00015a c006      	RJMP _0x61
                 _0x5F:
00015b 9b1d      	SBIS 0x3,5
00015c c002      	RJMP _0x62
00015d 9b19      	SBIS 0x3,1
00015e c002      	RJMP _0x61
                 _0x62:
00015f e0e0      	LDI  R30,0
000160 c001      	RJMP _0x64
                 _0x61:
000161 e0e1      	LDI  R30,1
                 _0x64:
000162 30e0      	CPI  R30,0
000163 f411      	BRNE _0x65
000164 9859      	CBI  0xB,1
000165 c001      	RJMP _0x66
                 _0x65:
000166 9a59      	SBI  0xB,1
                 _0x66:
                 ; 0000 003B                  PORTD.2=((PINB.2&&(!PINB.6))||(PINB.6&&(!PINB.2)));
000167 9b1a      	SBIS 0x3,2
000168 c002      	RJMP _0x67
000169 9b1e      	SBIS 0x3,6
00016a c006      	RJMP _0x69
                 _0x67:
00016b 9b1e      	SBIS 0x3,6
00016c c002      	RJMP _0x6A
00016d 9b1a      	SBIS 0x3,2
00016e c002      	RJMP _0x69
                 _0x6A:
00016f e0e0      	LDI  R30,0
000170 c001      	RJMP _0x6C
                 _0x69:
000171 e0e1      	LDI  R30,1
                 _0x6C:
000172 30e0      	CPI  R30,0
000173 f411      	BRNE _0x6D
000174 985a      	CBI  0xB,2
000175 c001      	RJMP _0x6E
                 _0x6D:
000176 9a5a      	SBI  0xB,2
                 _0x6E:
                 ; 0000 003C                  PORTD.3=((PINB.3&&(!PINB.7))||(PINB.7&&(!PINB.3)));
000177 9b1b      	SBIS 0x3,3
000178 c002      	RJMP _0x6F
000179 9b1f      	SBIS 0x3,7
00017a c006      	RJMP _0x71
                 _0x6F:
00017b 9b1f      	SBIS 0x3,7
00017c c002      	RJMP _0x72
00017d 9b1b      	SBIS 0x3,3
00017e c002      	RJMP _0x71
                 _0x72:
00017f e0e0      	LDI  R30,0
000180 c001      	RJMP _0x74
                 _0x71:
000181 e0e1      	LDI  R30,1
                 _0x74:
000182 30e0      	CPI  R30,0
000183 f411      	BRNE _0x75
000184 985b      	CBI  0xB,3
000185 c001      	RJMP _0x76
                 _0x75:
000186 9a5b      	SBI  0xB,3
                 _0x76:
                 ; 0000 003D                  break;
000187 c051      	RJMP _0x8
                 ; 0000 003E             }
                 ; 0000 003F             case 0x06:
                 _0x56:
000188 30e6      	CPI  R30,LOW(0x6)
000189 f011      	BREQ PC+3
00018a 940c 01cd 	JMP _0x77
                 ; 0000 0040             {
                 ; 0000 0041                  PORTD.0=!((PINB.0&&(!PINB.4))||(PINB.4&&(!PINB.0)));
00018c 9b18      	SBIS 0x3,0
00018d c002      	RJMP _0x78
00018e 9b1c      	SBIS 0x3,4
00018f c006      	RJMP _0x7A
                 _0x78:
000190 9b1c      	SBIS 0x3,4
000191 c002      	RJMP _0x7B
000192 9b18      	SBIS 0x3,0
000193 c002      	RJMP _0x7A
                 _0x7B:
000194 e0e0      	LDI  R30,0
000195 c001      	RJMP _0x7D
                 _0x7A:
000196 e0e1      	LDI  R30,1
                 _0x7D:
000197 30e0      	CPI  R30,0
000198 f011      	BREQ _0x7E
000199 9858      	CBI  0xB,0
00019a c001      	RJMP _0x7F
                 _0x7E:
00019b 9a58      	SBI  0xB,0
                 _0x7F:
                 ; 0000 0042                  PORTD.1=!((PINB.1&&(!PINB.5))||(PINB.5&&(!PINB.1)));
00019c 9b19      	SBIS 0x3,1
00019d c002      	RJMP _0x80
00019e 9b1d      	SBIS 0x3,5
00019f c006      	RJMP _0x82
                 _0x80:
0001a0 9b1d      	SBIS 0x3,5
0001a1 c002      	RJMP _0x83
0001a2 9b19      	SBIS 0x3,1
0001a3 c002      	RJMP _0x82
                 _0x83:
0001a4 e0e0      	LDI  R30,0
0001a5 c001      	RJMP _0x85
                 _0x82:
0001a6 e0e1      	LDI  R30,1
                 _0x85:
0001a7 30e0      	CPI  R30,0
0001a8 f011      	BREQ _0x86
0001a9 9859      	CBI  0xB,1
0001aa c001      	RJMP _0x87
                 _0x86:
0001ab 9a59      	SBI  0xB,1
                 _0x87:
                 ; 0000 0043                  PORTD.2=!((PINB.2&&(!PINB.6))||(PINB.6&&(!PINB.2)));
0001ac 9b1a      	SBIS 0x3,2
0001ad c002      	RJMP _0x88
0001ae 9b1e      	SBIS 0x3,6
0001af c006      	RJMP _0x8A
                 _0x88:
0001b0 9b1e      	SBIS 0x3,6
0001b1 c002      	RJMP _0x8B
0001b2 9b1a      	SBIS 0x3,2
0001b3 c002      	RJMP _0x8A
                 _0x8B:
0001b4 e0e0      	LDI  R30,0
0001b5 c001      	RJMP _0x8D
                 _0x8A:
0001b6 e0e1      	LDI  R30,1
                 _0x8D:
0001b7 30e0      	CPI  R30,0
0001b8 f011      	BREQ _0x8E
0001b9 985a      	CBI  0xB,2
0001ba c001      	RJMP _0x8F
                 _0x8E:
0001bb 9a5a      	SBI  0xB,2
                 _0x8F:
                 ; 0000 0044                  PORTD.3=!((PINB.3&&(!PINB.7))||(PINB.7&&(!PINB.3)));
0001bc 9b1b      	SBIS 0x3,3
0001bd c002      	RJMP _0x90
0001be 9b1f      	SBIS 0x3,7
0001bf c006      	RJMP _0x92
                 _0x90:
0001c0 9b1f      	SBIS 0x3,7
0001c1 c002      	RJMP _0x93
0001c2 9b1b      	SBIS 0x3,3
0001c3 c002      	RJMP _0x92
                 _0x93:
0001c4 e0e0      	LDI  R30,0
0001c5 c001      	RJMP _0x95
                 _0x92:
0001c6 e0e1      	LDI  R30,1
                 _0x95:
0001c7 30e0      	CPI  R30,0
0001c8 f011      	BREQ _0x96
0001c9 985b      	CBI  0xB,3
0001ca c001      	RJMP _0x97
                 _0x96:
0001cb 9a5b      	SBI  0xB,3
                 _0x97:
                 ; 0000 0045                  break;
0001cc c00c      	RJMP _0x8
                 ; 0000 0046             }
                 ; 0000 0047             case 0x07:
                 _0x77:
0001cd 30e7      	CPI  R30,LOW(0x7)
0001ce f451      	BRNE _0x8
                 ; 0000 0048             {
                 ; 0000 0049                  PORTD=(PINB&0x0F)+((PINB&0xF0)>>4);
0001cf b1e3      	IN   R30,0x3
0001d0 70ef      	ANDI R30,LOW(0xF)
0001d1 2fae      	MOV  R26,R30
0001d2 b1e3      	IN   R30,0x3
0001d3 7fe0      	ANDI R30,LOW(0xF0)
0001d4 e0f0      	LDI  R31,0
0001d5 940e 01db 	CALL __ASRW4
0001d7 0fea      	ADD  R30,R26
0001d8 b9eb      	OUT  0xB,R30
                 ; 0000 004A                  break;
                 ; 0000 004B             }
                 ; 0000 004C         }
                 _0x8:
                 ; 0000 004D     }
0001d9 ce84      	RJMP _0x3
                 ; 0000 004E  }
                 _0x99:
0001da cfff      	RJMP _0x99
                 
                 	.CSEG
                 
                 	.CSEG
                 __ASRW4:
0001db 95f5      	ASR  R31
0001dc 95e7      	ROR  R30
                 __ASRW3:
0001dd 95f5      	ASR  R31
0001de 95e7      	ROR  R30
                 __ASRW2:
0001df 95f5      	ASR  R31
0001e0 95e7      	ROR  R30
0001e1 95f5      	ASR  R31
0001e2 95e7      	ROR  R30
0001e3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   0 r23:   0 
r24:   4 r25:   1 r26:   7 r27:   2 r28:   1 r29:   1 r30: 109 r31:   9 
x  :   2 y  :   0 z  :   0 
Registers used: 9 out of 35 (25.7%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   0 and   :   0 andi  :   3 asr   :   4 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :  20 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   1 
cbi   :  28 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   0 cpc   :   0 cpi   :  32 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   4 inc   :   0 jmp   :  29 ld    :   0 ldd   :   0 ldi   :  63 
lds   :   0 lpm   :   0 lsl   :   0 lsr   :   0 mov   :   1 movw  :   0 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  11 pop   :   0 push  :   0 rcall :   0 ret   :   1 
reti  :   0 rjmp  : 129 rol   :   0 ror   :   4 sbc   :   0 sbci  :   0 
sbi   :  28 sbic  :  16 sbis  :  52 sbiw  :   1 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   2 std   :   0 sts   :   2 sub   :   0 subi  :   0 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 27 out of 116 (23.3%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0003c8    968      0    968   32768   3.0%
[.dseg] 0x000100 0x000300      0      0      0    2303   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
