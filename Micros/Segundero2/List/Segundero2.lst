
AVRASM ver. 2.1.30  C:\Users\Javier\SkyDrive\Documents\Micros\Segundero2\List\Segundero2.asm Fri Oct 03 12:49:15 2014

C:\Users\Javier\SkyDrive\Documents\Micros\Segundero2\List\Segundero2.asm(1061): warning: Register r5 already defined by the .DEF directive
C:\Users\Javier\SkyDrive\Documents\Micros\Segundero2\List\Segundero2.asm(1062): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega328P
                 ;Program type             : Application
                 ;Clock frequency          : 1.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : long, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2303
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cursor=R5
                 	.DEF _i=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _0x3:
000034 0303
000035 0203
000036 0c02
000037 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
000038 0100
000039 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x40:
00003a 0e00
00003b 1f1d
00003c 1f1e
00003d 0e1f      	.DB  0x0,0xE,0x1D,0x1F,0x1E,0x1F,0x1F,0xE
                 _0x41:
00003e 0e00
00003f 1e1d
000040 1e1c
000041 0e1f      	.DB  0x0,0xE,0x1D,0x1E,0x1C,0x1E,0x1F,0xE
                 _0x42:
000042 0e00
000043 1f17
000044 1f0f
000045 0e1f      	.DB  0x0,0xE,0x17,0x1F,0xF,0x1F,0x1F,0xE
                 _0x43:
000046 0e00
000047 0f17
000048 0f07
000049 0e1f      	.DB  0x0,0xE,0x17,0xF,0x7,0xF,0x1F,0xE
                 _0x0:
00004a 694d
00004b 7263
00004c 636f
00004d 6e6f      	.DB  0x4D,0x69,0x63,0x72,0x6F,0x63,0x6F,0x6E
00004e 7274
00004f 6c6f
000050 6461
000051 726f      	.DB  0x74,0x72,0x6F,0x6C,0x61,0x64,0x6F,0x72
000052 7365
000053 4100
000054 6f67
000055 7473      	.DB  0x65,0x73,0x0,0x41,0x67,0x6F,0x73,0x74
000056 2d6f
000057 6944
000058 6963
000059 6d65      	.DB  0x6F,0x2D,0x44,0x69,0x63,0x69,0x65,0x6D
00005a 7262
00005b 0065
00005c 3032
00005d 3431      	.DB  0x62,0x72,0x65,0x0,0x32,0x30,0x31,0x34
00005e 4500
00005f 6978
000060 6f74
C:\Users\Javier\SkyDrive\Documents\Micros\Segundero2\List\Segundero2.asm(1118): warning: .cseg .db misalignment - padding zero byte
000061 0000      	.DB  0x0,0x45,0x78,0x69,0x74,0x6F,0x0
                 
                 __GLOBAL_INI_TBL:
000062 0008      	.DW  0x08
000063 0300      	.DW  _car0
000064 0074      	.DW  _0x40*2
                 
000065 0008      	.DW  0x08
000066 0308      	.DW  _car1
000067 007c      	.DW  _0x41*2
                 
000068 0008      	.DW  0x08
000069 0310      	.DW  _car2
00006a 0084      	.DW  _0x42*2
                 
00006b 0008      	.DW  0x08
00006c 0318      	.DW  _car3
00006d 008c      	.DW  _0x43*2
                 
                 _0xFFFFFFFF:
00006e 0000      	.DW  0
                 
                 __RESET:
00006f 94f8      	CLI
000070 27ee      	CLR  R30
000071 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000072 e0f1      	LDI  R31,1
000073 bff5      	OUT  MCUCR,R31
000074 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000075 e1f8      	LDI  R31,0x18
000076 95a8      	WDR
000077 b7a4      	IN   R26,MCUSR
000078 7fa7      	CBR  R26,8
000079 bfa4      	OUT  MCUSR,R26
00007a 93f0 0060 	STS  WDTCSR,R31
00007c 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00007e e08d      	LDI  R24,(14-2)+1
00007f e0a2      	LDI  R26,2
000080 27bb      	CLR  R27
                 __CLEAR_REG:
000081 93ed      	ST   X+,R30
000082 958a      	DEC  R24
000083 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000084 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000085 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000086 e0a0      	LDI  R26,LOW(__SRAM_START)
000087 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000088 93ed      	ST   X+,R30
000089 9701      	SBIW R24,1
00008a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00008b ece4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00008c e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008d 9185      	LPM  R24,Z+
00008e 9195      	LPM  R25,Z+
00008f 9700      	SBIW R24,0
000090 f061      	BREQ __GLOBAL_INI_END
000091 91a5      	LPM  R26,Z+
000092 91b5      	LPM  R27,Z+
000093 9005      	LPM  R0,Z+
000094 9015      	LPM  R1,Z+
000095 01bf      	MOVW R22,R30
000096 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000097 9005      	LPM  R0,Z+
000098 920d      	ST   X+,R0
000099 9701      	SBIW R24,1
00009a f7e1      	BRNE __GLOBAL_INI_LOOP
00009b 01fb      	MOVW R30,R22
00009c cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
00009d e0e0      	LDI  R30,__GPIOR0_INIT
00009e bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009f efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a0 bfed      	OUT  SPL,R30
0000a1 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a2 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a3 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a4 e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a5 940c 01b1 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 ;    #include <MEGA328P.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;    #include <delay.h>
                 ;    #include "display.h"
                 
                 	.CSEG
                 _ConfiguraLCD:
0000a7 972c      	SBIW R28,12
0000a8 e08c      	LDI  R24,12
0000a9 e0a0      	LDI  R26,LOW(0)
0000aa e0b0      	LDI  R27,HIGH(0)
0000ab e6e8      	LDI  R30,LOW(_0x3*2)
0000ac e0f0      	LDI  R31,HIGH(_0x3*2)
0000ad 940e 02cb 	CALL __INITLOCB
0000af 931a      	ST   -Y,R17
                 ;	TablaInicializacion -> Y+1
                 ;	i -> R17
0000b0 b1e7      	IN   R30,0x7
0000b1 60ef      	ORI  R30,LOW(0xF)
0000b2 b9e7      	OUT  0x7,R30
0000b3 b1e4      	IN   R30,0x4
0000b4 60e7      	ORI  R30,LOW(0x7)
0000b5 b9e4      	OUT  0x4,R30
0000b6 e3e2      	LDI  R30,LOW(50)
0000b7 e0f0      	LDI  R31,HIGH(50)
0000b8 93fa      	ST   -Y,R31
0000b9 93ea      	ST   -Y,R30
0000ba 940e 02b6 	CALL _delay_ms
0000bc e010      	LDI  R17,LOW(0)
                 _0x5:
0000bd 301c      	CPI  R17,12
0000be f490      	BRSH _0x6
0000bf e0e2      	LDI  R30,LOW(2)
0000c0 e0f0      	LDI  R31,HIGH(2)
0000c1 93fa      	ST   -Y,R31
0000c2 93ea      	ST   -Y,R30
0000c3 940e 02b6 	CALL _delay_ms
0000c5 2fe1      	MOV  R30,R17
0000c6 e0f0      	LDI  R31,0
0000c7 01de      	MOVW R26,R28
0000c8 9611      	ADIW R26,1
0000c9 0fae      	ADD  R26,R30
0000ca 1fbf      	ADC  R27,R31
0000cb 91ec      	LD   R30,X
0000cc 93ea      	ST   -Y,R30
0000cd d00d      	RCALL _MandaLineasDatosLCD
0000ce d009      	RCALL _PulsoEn
0000cf 5f1f      	SUBI R17,-1
0000d0 cfec      	RJMP _0x5
                 _0x6:
0000d1 e0ec      	LDI  R30,LOW(12)
0000d2 2e5e      	MOV  R5,R30
0000d3 925a      	ST   -Y,R5
0000d4 d020      	RCALL _EscribeComLCD
0000d5 8118      	LDD  R17,Y+0
0000d6 962d      	ADIW R28,13
0000d7 9508      	RET
                 _PulsoEn:
0000d8 9a29      	SBI  0x5,1
0000d9 9829      	CBI  0x5,1
0000da 9508      	RET
                 _MandaLineasDatosLCD:
                 ;	dato -> Y+0
0000db 81e8      	LD   R30,Y
0000dc 70e8      	ANDI R30,LOW(0x8)
0000dd f011      	BREQ _0xF
0000de 9a43      	SBI  0x8,3
0000df c001      	RJMP _0x12
                 _0xF:
0000e0 9843      	CBI  0x8,3
                 _0x12:
0000e1 81e8      	LD   R30,Y
0000e2 70e4      	ANDI R30,LOW(0x4)
0000e3 f011      	BREQ _0x15
0000e4 9a42      	SBI  0x8,2
0000e5 c001      	RJMP _0x18
                 _0x15:
0000e6 9842      	CBI  0x8,2
                 _0x18:
0000e7 81e8      	LD   R30,Y
0000e8 70e2      	ANDI R30,LOW(0x2)
0000e9 f011      	BREQ _0x1B
0000ea 9a41      	SBI  0x8,1
0000eb c001      	RJMP _0x1E
                 _0x1B:
0000ec 9841      	CBI  0x8,1
                 _0x1E:
0000ed 81e8      	LD   R30,Y
0000ee 70e1      	ANDI R30,LOW(0x1)
0000ef f011      	BREQ _0x21
0000f0 9a40      	SBI  0x8,0
0000f1 c001      	RJMP _0x24
                 _0x21:
0000f2 9840      	CBI  0x8,0
                 _0x24:
0000f3 9621      	ADIW R28,1
0000f4 9508      	RET
                 _EscribeComLCD:
0000f5 931a      	ST   -Y,R17
                 ;	Comando -> Y+1
                 ;	tempComando -> R17
0000f6 9828      	CBI  0x5,0
0000f7 e0e2      	LDI  R30,LOW(2)
0000f8 e0f0      	LDI  R31,HIGH(2)
0000f9 93fa      	ST   -Y,R31
0000fa 93ea      	ST   -Y,R30
0000fb 940e 02b6 	CALL _delay_ms
0000fd 81e9      	LDD  R30,Y+1
0000fe 7fe0      	ANDI R30,LOW(0xF0)
0000ff 2f1e      	MOV  R17,R30
000100 2fe1      	MOV  R30,R17
000101 e0f0      	LDI  R31,0
000102 940e 02c2 	CALL __ASRW4
000104 2f1e      	MOV  R17,R30
000105 931a      	ST   -Y,R17
000106 dfd4      	RCALL _MandaLineasDatosLCD
000107 dfd0      	RCALL _PulsoEn
000108 81e9      	LDD  R30,Y+1
000109 70ef      	ANDI R30,LOW(0xF)
00010a 2f1e      	MOV  R17,R30
00010b 931a      	ST   -Y,R17
00010c dfce      	RCALL _MandaLineasDatosLCD
00010d e0e2      	LDI  R30,LOW(2)
00010e e0f0      	LDI  R31,HIGH(2)
00010f 93fa      	ST   -Y,R31
000110 93ea      	ST   -Y,R30
000111 940e 02b6 	CALL _delay_ms
000113 dfc4      	RCALL _PulsoEn
000114 8118      	LDD  R17,Y+0
000115 c077      	RJMP _0x2060001
                 _LetraDatoLCD:
000116 931a      	ST   -Y,R17
                 ;	dato -> Y+1
                 ;	tempdato -> R17
000117 9a28      	SBI  0x5,0
000118 e0e2      	LDI  R30,LOW(2)
000119 e0f0      	LDI  R31,HIGH(2)
00011a 93fa      	ST   -Y,R31
00011b 93ea      	ST   -Y,R30
00011c 940e 02b6 	CALL _delay_ms
00011e 81e9      	LDD  R30,Y+1
00011f 7fe0      	ANDI R30,LOW(0xF0)
000120 2f1e      	MOV  R17,R30
000121 2fe1      	MOV  R30,R17
000122 e0f0      	LDI  R31,0
000123 940e 02c2 	CALL __ASRW4
000125 2f1e      	MOV  R17,R30
000126 931a      	ST   -Y,R17
000127 dfb3      	RCALL _MandaLineasDatosLCD
000128 dfaf      	RCALL _PulsoEn
000129 81e9      	LDD  R30,Y+1
00012a 70ef      	ANDI R30,LOW(0xF)
00012b 2f1e      	MOV  R17,R30
00012c 931a      	ST   -Y,R17
00012d dfad      	RCALL _MandaLineasDatosLCD
00012e e0e2      	LDI  R30,LOW(2)
00012f e0f0      	LDI  R31,HIGH(2)
000130 93fa      	ST   -Y,R31
000131 93ea      	ST   -Y,R30
000132 940e 02b6 	CALL _delay_ms
000134 dfa3      	RCALL _PulsoEn
000135 8118      	LDD  R17,Y+0
000136 c056      	RJMP _0x2060001
                 _LetraLCD:
000137 931a      	ST   -Y,R17
                 ;	dato -> Y+1
                 ;	tempdato -> R17
000138 9a28      	SBI  0x5,0
000139 e0e2      	LDI  R30,LOW(2)
00013a e0f0      	LDI  R31,HIGH(2)
00013b 93fa      	ST   -Y,R31
00013c 93ea      	ST   -Y,R30
00013d 940e 02b6 	CALL _delay_ms
00013f 81e9      	LDD  R30,Y+1
000140 7fe0      	ANDI R30,LOW(0xF0)
000141 2f1e      	MOV  R17,R30
000142 2fe1      	MOV  R30,R17
000143 e0f0      	LDI  R31,0
000144 940e 02c2 	CALL __ASRW4
000146 2f1e      	MOV  R17,R30
000147 931a      	ST   -Y,R17
000148 df92      	RCALL _MandaLineasDatosLCD
000149 df8e      	RCALL _PulsoEn
00014a 81e9      	LDD  R30,Y+1
00014b 70ef      	ANDI R30,LOW(0xF)
00014c 2f1e      	MOV  R17,R30
00014d 931a      	ST   -Y,R17
00014e df8c      	RCALL _MandaLineasDatosLCD
00014f e0e2      	LDI  R30,LOW(2)
000150 e0f0      	LDI  R31,HIGH(2)
000151 93fa      	ST   -Y,R31
000152 93ea      	ST   -Y,R30
000153 940e 02b6 	CALL _delay_ms
000155 df82      	RCALL _PulsoEn
000156 8118      	LDD  R17,Y+0
000157 c035      	RJMP _0x2060001
                 _StringLCD:
000158 931a      	ST   -Y,R17
                 ;	i -> R17
000159 e010      	LDI  R17,LOW(0)
                 _0x2E:
00015a 2fe1      	MOV  R30,R17
00015b 5f1f      	SUBI R17,-1
00015c 81a9      	LDD  R26,Y+1
00015d 81ba      	LDD  R27,Y+1+1
00015e e0f0      	LDI  R31,0
00015f 0fea      	ADD  R30,R26
000160 1ffb      	ADC  R31,R27
000161 91e4      	LPM  R30,Z
000162 93ea      	ST   -Y,R30
000163 dfd3      	RCALL _LetraLCD
000164 2fe1      	MOV  R30,R17
000165 81a9      	LDD  R26,Y+1
000166 81ba      	LDD  R27,Y+1+1
000167 e0f0      	LDI  R31,0
000168 0fea      	ADD  R30,R26
000169 1ffb      	ADC  R31,R27
00016a 91e4      	LPM  R30,Z
00016b 30e0      	CPI  R30,0
00016c f769      	BRNE _0x2E
00016d 8118      	LDD  R17,Y+0
00016e 9623      	ADIW R28,3
00016f 9508      	RET
                 ;	tiempo -> Y+1
                 ;	i -> R17
                 ;	Mensaje -> Y+1
                 ;	i -> R17
                 _MoverCursor:
                 ;	x -> Y+1
                 ;	y -> Y+0
000170 81e8      	LD   R30,Y
000171 e0f0      	LDI  R31,0
000172 9730      	SBIW R30,0
000173 f419      	BRNE _0x39
000174 81e9      	LDD  R30,Y+1
000175 58e0      	SUBI R30,-LOW(128)
000176 c014      	RJMP _0x54
                 _0x39:
000177 30e1      	CPI  R30,LOW(0x1)
000178 e0a0      	LDI  R26,HIGH(0x1)
000179 07fa      	CPC  R31,R26
00017a f419      	BRNE _0x3A
00017b 81e9      	LDD  R30,Y+1
00017c 54e0      	SUBI R30,-LOW(192)
00017d c00d      	RJMP _0x54
                 _0x3A:
00017e 30e2      	CPI  R30,LOW(0x2)
00017f e0a0      	LDI  R26,HIGH(0x2)
000180 07fa      	CPC  R31,R26
000181 f419      	BRNE _0x3B
000182 81e9      	LDD  R30,Y+1
000183 56ec      	SUBI R30,-LOW(148)
000184 c006      	RJMP _0x54
                 _0x3B:
000185 30e3      	CPI  R30,LOW(0x3)
000186 e0a0      	LDI  R26,HIGH(0x3)
000187 07fa      	CPC  R31,R26
000188 f421      	BRNE _0x38
000189 81e9      	LDD  R30,Y+1
00018a 52ec      	SUBI R30,-LOW(212)
                 _0x54:
00018b 93ea      	ST   -Y,R30
00018c df68      	RCALL _EscribeComLCD
                 _0x38:
                 _0x2060001:
00018d 9622      	ADIW R28,2
00018e 9508      	RET
                 _CreaCaracter:
00018f 931a      	ST   -Y,R17
                 ;	NoCaracter -> Y+3
                 ;	datos -> Y+1
                 ;	i -> R17
000190 81eb      	LDD  R30,Y+3
000191 0fee      	LSL  R30
000192 0fee      	LSL  R30
000193 0fee      	LSL  R30
000194 5ce0      	SUBI R30,-LOW(64)
000195 93ea      	ST   -Y,R30
000196 df5e      	RCALL _EscribeComLCD
000197 e010      	LDI  R17,LOW(0)
                 _0x3E:
000198 3018      	CPI  R17,8
000199 f450      	BRSH _0x3F
00019a 81a9      	LDD  R26,Y+1
00019b 81ba      	LDD  R27,Y+1+1
00019c 27ee      	CLR  R30
00019d 0fa1      	ADD  R26,R17
00019e 1fbe      	ADC  R27,R30
00019f 91ec      	LD   R30,X
0001a0 93ea      	ST   -Y,R30
0001a1 df74      	RCALL _LetraDatoLCD
0001a2 5f1f      	SUBI R17,-1
0001a3 cff4      	RJMP _0x3E
                 _0x3F:
0001a4 e8e0      	LDI  R30,LOW(128)
0001a5 93ea      	ST   -Y,R30
0001a6 df4e      	RCALL _EscribeComLCD
0001a7 8118      	LDD  R17,Y+0
0001a8 9624      	ADIW R28,4
0001a9 9508      	RET
                 ;    #include <stdio.h>
                 ;
                 ;
                 ;char car0[8]={0x00,0x0E,0x1D,0x1F,0x1E,0x1F,0x1F,0x0E};
                 
                 	.DSEG
                 ;char car1[8]={0x00,0x0E,0x1D,0x1E,0x1C,0x1E,0x1F,0x0E};
                 ;
                 ;char car2[8]={0x00,0x0E,0x17,0x1F,0x0F,0x1F,0x1F,0x0E};
                 ;char car3[8]={0x00,0x0E,0x17,0x0F,0x07,0x0F,0x1F,0x0E};
                 ;int i;
                 ;
                 ;
                 ;void delayPacman()
                 ; 0000 0010 {
                 
                 	.CSEG
                 _delayPacman:
                 ; 0000 0011     delay_ms(10);
0001aa e0ea      	LDI  R30,LOW(10)
0001ab e0f0      	LDI  R31,HIGH(10)
0001ac 93fa      	ST   -Y,R31
0001ad 93ea      	ST   -Y,R30
0001ae 940e 02b6 	CALL _delay_ms
                 ; 0000 0012 }
0001b0 9508      	RET
                 ;
                 ;void main()
                 ; 0000 0015 {
                 _main:
                 ; 0000 0016     ConfiguraLCD();
0001b1 def5      	RCALL _ConfiguraLCD
                 ; 0000 0017     CreaCaracter(0,car0);
0001b2 e0e0      	LDI  R30,LOW(0)
0001b3 93ea      	ST   -Y,R30
0001b4 e0e0      	LDI  R30,LOW(_car0)
0001b5 e0f3      	LDI  R31,HIGH(_car0)
0001b6 93fa      	ST   -Y,R31
0001b7 93ea      	ST   -Y,R30
0001b8 dfd6      	RCALL _CreaCaracter
                 ; 0000 0018     CreaCaracter(1,car1);
0001b9 e0e1      	LDI  R30,LOW(1)
0001ba 93ea      	ST   -Y,R30
0001bb e0e8      	LDI  R30,LOW(_car1)
0001bc e0f3      	LDI  R31,HIGH(_car1)
0001bd 93fa      	ST   -Y,R31
0001be 93ea      	ST   -Y,R30
0001bf dfcf      	RCALL _CreaCaracter
                 ; 0000 0019     CreaCaracter(2,car2);
0001c0 e0e2      	LDI  R30,LOW(2)
0001c1 93ea      	ST   -Y,R30
0001c2 e1e0      	LDI  R30,LOW(_car2)
0001c3 e0f3      	LDI  R31,HIGH(_car2)
0001c4 93fa      	ST   -Y,R31
0001c5 93ea      	ST   -Y,R30
0001c6 dfc8      	RCALL _CreaCaracter
                 ; 0000 001A     CreaCaracter(3,car3);
0001c7 e0e3      	LDI  R30,LOW(3)
0001c8 93ea      	ST   -Y,R30
0001c9 e1e8      	LDI  R30,LOW(_car3)
0001ca e0f3      	LDI  R31,HIGH(_car3)
0001cb 93fa      	ST   -Y,R31
0001cc 93ea      	ST   -Y,R30
0001cd dfc1      	RCALL _CreaCaracter
                 ; 0000 001B     while(1)
                 _0x44:
                 ; 0000 001C     {
                 ; 0000 001D         MoverCursor(1,0);
0001ce e0e1      	LDI  R30,LOW(1)
0001cf 93ea      	ST   -Y,R30
0001d0 e0e0      	LDI  R30,LOW(0)
0001d1 93ea      	ST   -Y,R30
0001d2 df9d      	RCALL _MoverCursor
                 ; 0000 001E         StringLCD("Microcontroladores");
                +
0001d3 e9e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0001d4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0001d5 93fa      	ST   -Y,R31
0001d6 93ea      	ST   -Y,R30
0001d7 df80      	RCALL _StringLCD
                 ; 0000 001F         MoverCursor(2,1);
0001d8 e0e2      	LDI  R30,LOW(2)
0001d9 93ea      	ST   -Y,R30
0001da e0e1      	LDI  R30,LOW(1)
0001db 93ea      	ST   -Y,R30
0001dc df93      	RCALL _MoverCursor
                 ; 0000 0020         StringLCD("Agosto-Diciembre");
                +
0001dd eae7     +LDI R30 , LOW ( 2 * _0x0 + ( 19 ) )
0001de e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 19 ) )
                 	__POINTW1FN _0x0,19
0001df 93fa      	ST   -Y,R31
0001e0 93ea      	ST   -Y,R30
0001e1 df76      	RCALL _StringLCD
                 ; 0000 0021         MoverCursor(8,2);
0001e2 e0e8      	LDI  R30,LOW(8)
0001e3 93ea      	ST   -Y,R30
0001e4 e0e2      	LDI  R30,LOW(2)
0001e5 93ea      	ST   -Y,R30
0001e6 df89      	RCALL _MoverCursor
                 ; 0000 0022         StringLCD("2014");
                +
0001e7 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 36 ) )
0001e8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW1FN _0x0,36
0001e9 93fa      	ST   -Y,R31
0001ea 93ea      	ST   -Y,R30
0001eb df6c      	RCALL _StringLCD
                 ; 0000 0023         MoverCursor(8,3);
0001ec e0e8      	LDI  R30,LOW(8)
0001ed 93ea      	ST   -Y,R30
0001ee e0e3      	LDI  R30,LOW(3)
0001ef 93ea      	ST   -Y,R30
0001f0 df7f      	RCALL _MoverCursor
                 ; 0000 0024         StringLCD("Exito");
                +
0001f1 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 41 ) )
0001f2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 41 ) )
                 	__POINTW1FN _0x0,41
0001f3 93fa      	ST   -Y,R31
0001f4 93ea      	ST   -Y,R30
0001f5 df62      	RCALL _StringLCD
                 ; 0000 0025 
                 ; 0000 0026         for(i=0;i<10;i++){
0001f6 2466      	CLR  R6
0001f7 2477      	CLR  R7
                 _0x48:
0001f8 e0ea      	LDI  R30,LOW(10)
0001f9 e0f0      	LDI  R31,HIGH(10)
0001fa 166e      	CP   R6,R30
0001fb 067f      	CPC  R7,R31
0001fc f52c      	BRGE _0x49
                 ; 0000 0027             MoverCursor(i*2,0);
0001fd 2de6      	MOV  R30,R6
0001fe 0fee      	LSL  R30
0001ff 93ea      	ST   -Y,R30
000200 e0e0      	LDI  R30,LOW(0)
000201 93ea      	ST   -Y,R30
000202 df6d      	RCALL _MoverCursor
                 ; 0000 0028             LetraLCD(0);
000203 e0e0      	LDI  R30,LOW(0)
000204 93ea      	ST   -Y,R30
000205 df31      	RCALL _LetraLCD
                 ; 0000 0029             delayPacman();
000206 dfa3      	RCALL _delayPacman
                 ; 0000 002A             MoverCursor(i*2,0);
000207 2de6      	MOV  R30,R6
000208 0fee      	LSL  R30
000209 93ea      	ST   -Y,R30
00020a e0e0      	LDI  R30,LOW(0)
00020b 93ea      	ST   -Y,R30
00020c df63      	RCALL _MoverCursor
                 ; 0000 002B             LetraLCD(' ');
00020d e2e0      	LDI  R30,LOW(32)
00020e 93ea      	ST   -Y,R30
00020f df27      	RCALL _LetraLCD
                 ; 0000 002C             LetraLCD(1);
000210 e0e1      	LDI  R30,LOW(1)
000211 93ea      	ST   -Y,R30
000212 df24      	RCALL _LetraLCD
                 ; 0000 002D             delayPacman();
000213 df96      	RCALL _delayPacman
                 ; 0000 002E             MoverCursor(i*2+1,0);
000214 2de6      	MOV  R30,R6
000215 0fee      	LSL  R30
000216 5fef      	SUBI R30,-LOW(1)
000217 93ea      	ST   -Y,R30
000218 e0e0      	LDI  R30,LOW(0)
000219 93ea      	ST   -Y,R30
00021a df55      	RCALL _MoverCursor
                 ; 0000 002F             LetraLCD(' ');
00021b e2e0      	LDI  R30,LOW(32)
00021c 93ea      	ST   -Y,R30
00021d df19      	RCALL _LetraLCD
                 ; 0000 0030 
                 ; 0000 0031 
                 ; 0000 0032 
                 ; 0000 0033 
                 ; 0000 0034 
                 ; 0000 0035         }
00021e 01f3      	MOVW R30,R6
00021f 9631      	ADIW R30,1
000220 013f      	MOVW R6,R30
000221 cfd6      	RJMP _0x48
                 _0x49:
                 ; 0000 0036          for(i=9;i>=0;i--){
000222 e0e9      	LDI  R30,LOW(9)
000223 e0f0      	LDI  R31,HIGH(9)
000224 013f      	MOVW R6,R30
                 _0x4B:
000225 2400      	CLR  R0
000226 1460      	CP   R6,R0
000227 0470      	CPC  R7,R0
000228 f164      	BRLT _0x4C
                 ; 0000 0037             MoverCursor(i*2+1,1);
000229 2de6      	MOV  R30,R6
00022a 0fee      	LSL  R30
00022b 5fef      	SUBI R30,-LOW(1)
00022c 93ea      	ST   -Y,R30
00022d e0e1      	LDI  R30,LOW(1)
00022e 93ea      	ST   -Y,R30
00022f df40      	RCALL _MoverCursor
                 ; 0000 0038             LetraLCD(2);
000230 e0e2      	LDI  R30,LOW(2)
000231 93ea      	ST   -Y,R30
000232 df04      	RCALL _LetraLCD
                 ; 0000 0039             delayPacman();
000233 df76      	RCALL _delayPacman
                 ; 0000 003A             MoverCursor(i*2+1,1);
000234 2de6      	MOV  R30,R6
000235 0fee      	LSL  R30
000236 5fef      	SUBI R30,-LOW(1)
000237 93ea      	ST   -Y,R30
000238 e0e1      	LDI  R30,LOW(1)
000239 93ea      	ST   -Y,R30
00023a df35      	RCALL _MoverCursor
                 ; 0000 003B             LetraLCD(' ');
00023b e2e0      	LDI  R30,LOW(32)
00023c 93ea      	ST   -Y,R30
00023d def9      	RCALL _LetraLCD
                 ; 0000 003C             MoverCursor(i*2,1);
00023e 2de6      	MOV  R30,R6
00023f 0fee      	LSL  R30
000240 93ea      	ST   -Y,R30
000241 e0e1      	LDI  R30,LOW(1)
000242 93ea      	ST   -Y,R30
000243 df2c      	RCALL _MoverCursor
                 ; 0000 003D             LetraLCD(3);
000244 e0e3      	LDI  R30,LOW(3)
000245 93ea      	ST   -Y,R30
000246 def0      	RCALL _LetraLCD
                 ; 0000 003E             delayPacman();
000247 df62      	RCALL _delayPacman
                 ; 0000 003F             MoverCursor(i*2,1);
000248 2de6      	MOV  R30,R6
000249 0fee      	LSL  R30
00024a 93ea      	ST   -Y,R30
00024b e0e1      	LDI  R30,LOW(1)
00024c 93ea      	ST   -Y,R30
00024d df22      	RCALL _MoverCursor
                 ; 0000 0040             LetraLCD(' ');
00024e e2e0      	LDI  R30,LOW(32)
00024f 93ea      	ST   -Y,R30
000250 dee6      	RCALL _LetraLCD
                 ; 0000 0041 
                 ; 0000 0042 
                 ; 0000 0043 
                 ; 0000 0044 
                 ; 0000 0045 
                 ; 0000 0046         }
000251 01f3      	MOVW R30,R6
000252 9731      	SBIW R30,1
000253 013f      	MOVW R6,R30
000254 cfd0      	RJMP _0x4B
                 _0x4C:
                 ; 0000 0047         for(i=0;i<10;i++){
000255 2466      	CLR  R6
000256 2477      	CLR  R7
                 _0x4E:
000257 e0ea      	LDI  R30,LOW(10)
000258 e0f0      	LDI  R31,HIGH(10)
000259 166e      	CP   R6,R30
00025a 067f      	CPC  R7,R31
00025b f52c      	BRGE _0x4F
                 ; 0000 0048             MoverCursor(i*2,2);
00025c 2de6      	MOV  R30,R6
00025d 0fee      	LSL  R30
00025e 93ea      	ST   -Y,R30
00025f e0e2      	LDI  R30,LOW(2)
000260 93ea      	ST   -Y,R30
000261 df0e      	RCALL _MoverCursor
                 ; 0000 0049             LetraLCD(0);
000262 e0e0      	LDI  R30,LOW(0)
000263 93ea      	ST   -Y,R30
000264 ded2      	RCALL _LetraLCD
                 ; 0000 004A             delayPacman();
000265 df44      	RCALL _delayPacman
                 ; 0000 004B             MoverCursor(i*2,2);
000266 2de6      	MOV  R30,R6
000267 0fee      	LSL  R30
000268 93ea      	ST   -Y,R30
000269 e0e2      	LDI  R30,LOW(2)
00026a 93ea      	ST   -Y,R30
00026b df04      	RCALL _MoverCursor
                 ; 0000 004C             LetraLCD(' ');
00026c e2e0      	LDI  R30,LOW(32)
00026d 93ea      	ST   -Y,R30
00026e dec8      	RCALL _LetraLCD
                 ; 0000 004D             LetraLCD(1);
00026f e0e1      	LDI  R30,LOW(1)
000270 93ea      	ST   -Y,R30
000271 dec5      	RCALL _LetraLCD
                 ; 0000 004E             delayPacman();
000272 df37      	RCALL _delayPacman
                 ; 0000 004F             MoverCursor(i*2+1,2);
000273 2de6      	MOV  R30,R6
000274 0fee      	LSL  R30
000275 5fef      	SUBI R30,-LOW(1)
000276 93ea      	ST   -Y,R30
000277 e0e2      	LDI  R30,LOW(2)
000278 93ea      	ST   -Y,R30
000279 def6      	RCALL _MoverCursor
                 ; 0000 0050             LetraLCD(' ');
00027a e2e0      	LDI  R30,LOW(32)
00027b 93ea      	ST   -Y,R30
00027c deba      	RCALL _LetraLCD
                 ; 0000 0051 
                 ; 0000 0052 
                 ; 0000 0053 
                 ; 0000 0054 
                 ; 0000 0055 
                 ; 0000 0056         }
00027d 01f3      	MOVW R30,R6
00027e 9631      	ADIW R30,1
00027f 013f      	MOVW R6,R30
000280 cfd6      	RJMP _0x4E
                 _0x4F:
                 ; 0000 0057          for(i=9;i>=0;i--){
000281 e0e9      	LDI  R30,LOW(9)
000282 e0f0      	LDI  R31,HIGH(9)
000283 013f      	MOVW R6,R30
                 _0x51:
000284 2400      	CLR  R0
000285 1460      	CP   R6,R0
000286 0470      	CPC  R7,R0
000287 f164      	BRLT _0x52
                 ; 0000 0058             MoverCursor(i*2+1,3);
000288 2de6      	MOV  R30,R6
000289 0fee      	LSL  R30
00028a 5fef      	SUBI R30,-LOW(1)
00028b 93ea      	ST   -Y,R30
00028c e0e3      	LDI  R30,LOW(3)
00028d 93ea      	ST   -Y,R30
00028e dee1      	RCALL _MoverCursor
                 ; 0000 0059             LetraLCD(2);
00028f e0e2      	LDI  R30,LOW(2)
000290 93ea      	ST   -Y,R30
000291 dea5      	RCALL _LetraLCD
                 ; 0000 005A             delayPacman();
000292 df17      	RCALL _delayPacman
                 ; 0000 005B             MoverCursor(i*2+1,3);
000293 2de6      	MOV  R30,R6
000294 0fee      	LSL  R30
000295 5fef      	SUBI R30,-LOW(1)
000296 93ea      	ST   -Y,R30
000297 e0e3      	LDI  R30,LOW(3)
000298 93ea      	ST   -Y,R30
000299 ded6      	RCALL _MoverCursor
                 ; 0000 005C             LetraLCD(' ');
00029a e2e0      	LDI  R30,LOW(32)
00029b 93ea      	ST   -Y,R30
00029c de9a      	RCALL _LetraLCD
                 ; 0000 005D             MoverCursor(i*2,3);
00029d 2de6      	MOV  R30,R6
00029e 0fee      	LSL  R30
00029f 93ea      	ST   -Y,R30
0002a0 e0e3      	LDI  R30,LOW(3)
0002a1 93ea      	ST   -Y,R30
0002a2 decd      	RCALL _MoverCursor
                 ; 0000 005E             LetraLCD(3);
0002a3 e0e3      	LDI  R30,LOW(3)
0002a4 93ea      	ST   -Y,R30
0002a5 de91      	RCALL _LetraLCD
                 ; 0000 005F             delayPacman();
0002a6 df03      	RCALL _delayPacman
                 ; 0000 0060             MoverCursor(i*2,3);
0002a7 2de6      	MOV  R30,R6
0002a8 0fee      	LSL  R30
0002a9 93ea      	ST   -Y,R30
0002aa e0e3      	LDI  R30,LOW(3)
0002ab 93ea      	ST   -Y,R30
0002ac dec3      	RCALL _MoverCursor
                 ; 0000 0061             LetraLCD(' ');
0002ad e2e0      	LDI  R30,LOW(32)
0002ae 93ea      	ST   -Y,R30
0002af de87      	RCALL _LetraLCD
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064 
                 ; 0000 0065 
                 ; 0000 0066 
                 ; 0000 0067         }
0002b0 01f3      	MOVW R30,R6
0002b1 9731      	SBIW R30,1
0002b2 013f      	MOVW R6,R30
0002b3 cfd0      	RJMP _0x51
                 _0x52:
                 ; 0000 0068 
                 ; 0000 0069     }
0002b4 cf19      	RJMP _0x44
                 ; 0000 006A 
                 ; 0000 006B }
                 _0x53:
0002b5 cfff      	RJMP _0x53
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _car0:
000300           	.BYTE 0x8
                 _car1:
000308           	.BYTE 0x8
                 _car2:
000310           	.BYTE 0x8
                 _car3:
000318           	.BYTE 0x8
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
0002b6 91e9      	ld   r30,y+
0002b7 91f9      	ld   r31,y+
0002b8 9630      	adiw r30,0
0002b9 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002ba ef8a     +LDI R24 , LOW ( 0xFA )
0002bb e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0002bc 9701     +SBIW R24 , 1
0002bd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0002be 95a8      	wdr
0002bf 9731      	sbiw r30,1
0002c0 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002c1 9508      	ret
                 
                 __ASRW4:
0002c2 95f5      	ASR  R31
0002c3 95e7      	ROR  R30
                 __ASRW3:
0002c4 95f5      	ASR  R31
0002c5 95e7      	ROR  R30
                 __ASRW2:
0002c6 95f5      	ASR  R31
0002c7 95e7      	ROR  R30
0002c8 95f5      	ASR  R31
0002c9 95e7      	ROR  R30
0002ca 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0002cb 0fac      	ADD  R26,R28
0002cc 1fbd      	ADC  R27,R29
                 __INITLOC0:
0002cd 9005      	LPM  R0,Z+
0002ce 920d      	ST   X+,R0
0002cf 958a      	DEC  R24
0002d0 f7e1      	BRNE __INITLOC0
0002d1 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  12 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   2 r6 :  30 r7 :   6 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  42 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  11 r25:   3 r26:  23 r27:  12 r28:   9 r29:   2 r30: 288 r31:  64 
x  :   6 y  : 139 z  :  10 
Registers used: 18 out of 35 (51.4%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   5 
adiw  :   9 and   :   0 andi  :  10 asr   :   4 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   6 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   2 brmi  :   0 brne  :  11 brpl  :   0 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  13 
cbi   :   6 cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   7 cpi   :   6 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   0 jmp   :  27 ld    :   9 ldd   :  23 ldi   : 121 
lds   :   0 lpm   :  12 lsl   :  17 lsr   :   0 mov   :  30 movw  :  14 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   2 out   :   9 pop   :   0 push  :   0 rcall :  71 ret   :  10 
reti  :   0 rjmp  :  19 rol   :   0 ror   :   4 sbc   :   0 sbci  :   0 
sbi   :   7 sbic  :   0 sbis  :   0 sbiw  :   9 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 113 std   :   0 sts   :   2 sub   :   0 subi  :  14 swap  :   0 
tst   :   0 wdr   :   2 
Instructions used: 40 out of 116 (34.5%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005a4   1326    118   1444   32768   4.4%
[.dseg] 0x000100 0x000320      0     32     32    2303   1.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 3 warnings
